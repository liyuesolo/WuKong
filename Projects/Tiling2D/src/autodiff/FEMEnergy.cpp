#include "../../include/autodiff/FEMEnergy.h"

void computeLinear2DNeoHookeanEnergy(double E, double nu, const Eigen::Matrix<double,3,2> & x, const Eigen::Matrix<double,3,2> & X, double& energy){
	double _i_var[74];
	_i_var[0] = -1;
	_i_var[1] = (X(0,1))*(_i_var[0]);
	_i_var[2] = (X(0,0))*(_i_var[0]);
	_i_var[3] = (_i_var[1])+(X(1,1));
	_i_var[4] = (_i_var[2])+(X(2,0));
	_i_var[5] = (_i_var[1])+(X(2,1));
	_i_var[6] = (_i_var[2])+(X(1,0));
	_i_var[7] = (_i_var[4])*(_i_var[3]);
	_i_var[8] = (_i_var[6])*(_i_var[5]);
	_i_var[9] = (_i_var[8])-(_i_var[7]);
	_i_var[10] = -(_i_var[3]);
	_i_var[11] = (x(0,1))*(_i_var[0]);
	_i_var[12] = (x(0,0))*(_i_var[0]);
	_i_var[13] = -(_i_var[4]);
	_i_var[14] = (_i_var[10])/(_i_var[9]);
	_i_var[15] = (_i_var[11])+(x(2,1));
	_i_var[16] = (_i_var[5])/(_i_var[9]);
	_i_var[17] = (_i_var[11])+(x(1,1));
	_i_var[18] = (_i_var[6])/(_i_var[9]);
	_i_var[19] = (_i_var[12])+(x(2,0));
	_i_var[20] = (_i_var[13])/(_i_var[9]);
	_i_var[21] = (_i_var[12])+(x(1,0));
	_i_var[22] = (_i_var[15])*(_i_var[14]);
	_i_var[23] = (_i_var[17])*(_i_var[16]);
	_i_var[24] = (_i_var[19])*(_i_var[18]);
	_i_var[25] = (_i_var[21])*(_i_var[20]);
	_i_var[26] = (_i_var[15])*(_i_var[18]);
	_i_var[27] = (_i_var[17])*(_i_var[20]);
	_i_var[28] = (_i_var[19])*(_i_var[14]);
	_i_var[29] = (_i_var[21])*(_i_var[16]);
	_i_var[30] = (_i_var[23])+(_i_var[22]);
	_i_var[31] = (_i_var[25])+(_i_var[24]);
	_i_var[32] = (_i_var[27])+(_i_var[26]);
	_i_var[33] = (_i_var[29])+(_i_var[28]);
	_i_var[34] = 2;
	_i_var[35] = 1;
	_i_var[36] = (_i_var[31])*(_i_var[30]);
	_i_var[37] = (_i_var[33])*(_i_var[32]);
	_i_var[38] = (_i_var[32])*(_i_var[32]);
	_i_var[39] = (_i_var[31])*(_i_var[31]);
	_i_var[40] = (_i_var[30])*(_i_var[30]);
	_i_var[41] = (_i_var[33])*(_i_var[33]);
	_i_var[42] = (_i_var[34])*(nu);
	_i_var[43] = (_i_var[35])+(nu);
	_i_var[44] = (E)*(nu);
	_i_var[45] = (_i_var[37])-(_i_var[36]);
	_i_var[46] = (_i_var[39])+(_i_var[38]);
	_i_var[47] = (_i_var[41])+(_i_var[40]);
	_i_var[48] = (_i_var[35])-(_i_var[42]);
	_i_var[49] = (_i_var[44])/(_i_var[43]);
	_i_var[50] = std::log(_i_var[45]);
	_i_var[51] = (_i_var[47])+(_i_var[46]);
	_i_var[52] = (E)/(_i_var[34]);
	_i_var[53] = (X(2,0))-(X(0,0));
	_i_var[54] = (X(1,1))-(X(0,1));
	_i_var[55] = (X(2,1))-(X(0,1));
	_i_var[56] = (X(1,0))-(X(0,0));
	_i_var[57] = 0.5;
	_i_var[58] = (_i_var[49])/(_i_var[48]);
	_i_var[59] = (_i_var[34])*(_i_var[50]);
	_i_var[60] = (_i_var[51])-(_i_var[34]);
	_i_var[61] = (_i_var[52])/(_i_var[43]);
	_i_var[62] = (_i_var[54])*(_i_var[53]);
	_i_var[63] = (_i_var[56])*(_i_var[55]);
	_i_var[64] = (_i_var[50])*(_i_var[50]);
	_i_var[65] = (_i_var[58])*(_i_var[57]);
	_i_var[66] = (_i_var[60])-(_i_var[59]);
	_i_var[67] = (_i_var[57])*(_i_var[61]);
	_i_var[68] = (_i_var[63])-(_i_var[62]);
	_i_var[69] = (_i_var[65])*(_i_var[64]);
	_i_var[70] = (_i_var[67])*(_i_var[66]);
	_i_var[71] = (_i_var[57])*(_i_var[68]);
	_i_var[72] = (_i_var[70])+(_i_var[69]);
	_i_var[73] = (_i_var[72])*(_i_var[71]);
	energy = _i_var[73];
}
void computeLinear2DNeoHookeanEnergyGradient(double E, double nu, const Eigen::Matrix<double,3,2> & x, const Eigen::Matrix<double,3,2> & X, Eigen::Matrix<double, 6, 1>& energygradient){
	double _i_var[101];
	_i_var[0] = -1;
	_i_var[1] = (X(0,1))*(_i_var[0]);
	_i_var[2] = (X(0,0))*(_i_var[0]);
	_i_var[3] = (_i_var[1])+(X(1,1));
	_i_var[4] = (_i_var[2])+(X(2,0));
	_i_var[5] = (_i_var[1])+(X(2,1));
	_i_var[6] = (_i_var[2])+(X(1,0));
	_i_var[7] = (_i_var[4])*(_i_var[3]);
	_i_var[8] = (_i_var[6])*(_i_var[5]);
	_i_var[9] = (_i_var[8])-(_i_var[7]);
	_i_var[10] = -(_i_var[3]);
	_i_var[11] = (x(0,1))*(_i_var[0]);
	_i_var[12] = (x(0,0))*(_i_var[0]);
	_i_var[13] = -(_i_var[4]);
	_i_var[14] = (_i_var[10])/(_i_var[9]);
	_i_var[15] = (_i_var[11])+(x(2,1));
	_i_var[16] = (_i_var[5])/(_i_var[9]);
	_i_var[17] = (_i_var[11])+(x(1,1));
	_i_var[18] = (_i_var[6])/(_i_var[9]);
	_i_var[19] = (_i_var[12])+(x(2,0));
	_i_var[20] = (_i_var[13])/(_i_var[9]);
	_i_var[21] = (_i_var[12])+(x(1,0));
	_i_var[22] = 2;
	_i_var[23] = 1;
	_i_var[24] = (X(2,0))-(X(0,0));
	_i_var[25] = (X(1,1))-(X(0,1));
	_i_var[26] = (X(2,1))-(X(0,1));
	_i_var[27] = (X(1,0))-(X(0,0));
	_i_var[28] = (_i_var[15])*(_i_var[14]);
	_i_var[29] = (_i_var[17])*(_i_var[16]);
	_i_var[30] = (_i_var[19])*(_i_var[18]);
	_i_var[31] = (_i_var[21])*(_i_var[20]);
	_i_var[32] = (_i_var[15])*(_i_var[18]);
	_i_var[33] = (_i_var[17])*(_i_var[20]);
	_i_var[34] = (_i_var[19])*(_i_var[14]);
	_i_var[35] = (_i_var[21])*(_i_var[16]);
	_i_var[36] = (_i_var[22])*(nu);
	_i_var[37] = (_i_var[23])+(nu);
	_i_var[38] = (E)*(nu);
	_i_var[39] = (E)/(_i_var[22]);
	_i_var[40] = (_i_var[25])*(_i_var[24]);
	_i_var[41] = (_i_var[27])*(_i_var[26]);
	_i_var[42] = (_i_var[29])+(_i_var[28]);
	_i_var[43] = (_i_var[31])+(_i_var[30]);
	_i_var[44] = (_i_var[33])+(_i_var[32]);
	_i_var[45] = (_i_var[35])+(_i_var[34]);
	_i_var[46] = (_i_var[23])-(_i_var[36]);
	_i_var[47] = (_i_var[38])/(_i_var[37]);
	_i_var[48] = (_i_var[39])/(_i_var[37]);
	_i_var[49] = 0.5;
	_i_var[50] = (_i_var[41])-(_i_var[40]);
	_i_var[51] = (_i_var[43])*(_i_var[42]);
	_i_var[52] = (_i_var[45])*(_i_var[44]);
	_i_var[53] = (_i_var[47])/(_i_var[46]);
	_i_var[54] = (_i_var[49])*(_i_var[48]);
	_i_var[55] = (_i_var[49])*(_i_var[50]);
	_i_var[56] = (_i_var[52])-(_i_var[51]);
	_i_var[57] = (_i_var[53])*(_i_var[49]);
	_i_var[58] = (_i_var[55])*(_i_var[54]);
	_i_var[59] = std::log(_i_var[56]);
	_i_var[60] = (_i_var[55])*(_i_var[57]);
	_i_var[61] = (_i_var[58])*(_i_var[0]);
	_i_var[62] = (_i_var[60])*(_i_var[59]);
	_i_var[63] = (_i_var[61])*(_i_var[22]);
	_i_var[64] = (_i_var[22])*(_i_var[62]);
	_i_var[65] = (_i_var[23])/(_i_var[56]);
	_i_var[66] = (_i_var[64])+(_i_var[63]);
	_i_var[67] = (_i_var[66])*(_i_var[65]);
	_i_var[68] = (_i_var[67])*(_i_var[0]);
	_i_var[69] = (_i_var[58])*(_i_var[43]);
	_i_var[70] = (_i_var[58])*(_i_var[45]);
	_i_var[71] = (_i_var[58])*(_i_var[42]);
	_i_var[72] = (_i_var[58])*(_i_var[44]);
	_i_var[73] = (_i_var[68])*(_i_var[42]);
	_i_var[74] = (_i_var[22])*(_i_var[69]);
	_i_var[75] = (_i_var[67])*(_i_var[44]);
	_i_var[76] = (_i_var[22])*(_i_var[70]);
	_i_var[77] = (_i_var[68])*(_i_var[43]);
	_i_var[78] = (_i_var[22])*(_i_var[71]);
	_i_var[79] = (_i_var[67])*(_i_var[45]);
	_i_var[80] = (_i_var[22])*(_i_var[72]);
	_i_var[81] = (_i_var[74])+(_i_var[73]);
	_i_var[82] = (_i_var[76])+(_i_var[75]);
	_i_var[83] = (_i_var[78])+(_i_var[77]);
	_i_var[84] = (_i_var[80])+(_i_var[79]);
	_i_var[85] = (_i_var[81])*(_i_var[18]);
	_i_var[86] = (_i_var[82])*(_i_var[14]);
	_i_var[87] = (_i_var[81])*(_i_var[20]);
	_i_var[88] = (_i_var[82])*(_i_var[16]);
	_i_var[89] = (_i_var[83])*(_i_var[14]);
	_i_var[90] = (_i_var[84])*(_i_var[18]);
	_i_var[91] = (_i_var[83])*(_i_var[16]);
	_i_var[92] = (_i_var[84])*(_i_var[20]);
	_i_var[93] = (_i_var[86])+(_i_var[85]);
	_i_var[94] = (_i_var[88])+(_i_var[87]);
	_i_var[95] = (_i_var[90])+(_i_var[89]);
	_i_var[96] = (_i_var[92])+(_i_var[91]);
	_i_var[97] = (_i_var[94])+(_i_var[93]);
	_i_var[98] = (_i_var[96])+(_i_var[95]);
	_i_var[99] = (_i_var[97])*(_i_var[0]);
	_i_var[100] = (_i_var[98])*(_i_var[0]);
	energygradient(0,0) = _i_var[99];
	energygradient(1,0) = _i_var[100];
	energygradient(2,0) = _i_var[94];
	energygradient(3,0) = _i_var[96];
	energygradient(4,0) = _i_var[93];
	energygradient(5,0) = _i_var[95];
}
void computeLinear2DNeoHookeanEnergyHessian(double E, double nu, const Eigen::Matrix<double,3,2> & x, const Eigen::Matrix<double,3,2> & X, Eigen::Matrix<double, 6, 6>& energyhessian){
	double _i_var[206];
	_i_var[0] = -1;
	_i_var[1] = (X(0,1))*(_i_var[0]);
	_i_var[2] = (X(0,0))*(_i_var[0]);
	_i_var[3] = (_i_var[1])+(X(1,1));
	_i_var[4] = (_i_var[2])+(X(2,0));
	_i_var[5] = (_i_var[1])+(X(2,1));
	_i_var[6] = (_i_var[2])+(X(1,0));
	_i_var[7] = (_i_var[4])*(_i_var[3]);
	_i_var[8] = (_i_var[6])*(_i_var[5]);
	_i_var[9] = (_i_var[8])-(_i_var[7]);
	_i_var[10] = -(_i_var[3]);
	_i_var[11] = (x(0,1))*(_i_var[0]);
	_i_var[12] = (x(0,0))*(_i_var[0]);
	_i_var[13] = -(_i_var[4]);
	_i_var[14] = (_i_var[10])/(_i_var[9]);
	_i_var[15] = (_i_var[11])+(x(2,1));
	_i_var[16] = (_i_var[5])/(_i_var[9]);
	_i_var[17] = (_i_var[11])+(x(1,1));
	_i_var[18] = (_i_var[6])/(_i_var[9]);
	_i_var[19] = (_i_var[12])+(x(2,0));
	_i_var[20] = (_i_var[13])/(_i_var[9]);
	_i_var[21] = (_i_var[12])+(x(1,0));
	_i_var[22] = 1;
	_i_var[23] = 2;
	_i_var[24] = (X(2,0))-(X(0,0));
	_i_var[25] = (X(1,1))-(X(0,1));
	_i_var[26] = (X(2,1))-(X(0,1));
	_i_var[27] = (X(1,0))-(X(0,0));
	_i_var[28] = (_i_var[15])*(_i_var[14]);
	_i_var[29] = (_i_var[17])*(_i_var[16]);
	_i_var[30] = (_i_var[19])*(_i_var[18]);
	_i_var[31] = (_i_var[21])*(_i_var[20]);
	_i_var[32] = (_i_var[15])*(_i_var[18]);
	_i_var[33] = (_i_var[17])*(_i_var[20]);
	_i_var[34] = (_i_var[19])*(_i_var[14]);
	_i_var[35] = (_i_var[21])*(_i_var[16]);
	_i_var[36] = (_i_var[22])+(nu);
	_i_var[37] = (E)/(_i_var[23]);
	_i_var[38] = (_i_var[25])*(_i_var[24]);
	_i_var[39] = (_i_var[27])*(_i_var[26]);
	_i_var[40] = (_i_var[29])+(_i_var[28]);
	_i_var[41] = (_i_var[31])+(_i_var[30]);
	_i_var[42] = (_i_var[33])+(_i_var[32]);
	_i_var[43] = (_i_var[35])+(_i_var[34]);
	_i_var[44] = (_i_var[23])*(nu);
	_i_var[45] = (E)*(nu);
	_i_var[46] = (_i_var[37])/(_i_var[36]);
	_i_var[47] = 0.5;
	_i_var[48] = (_i_var[39])-(_i_var[38]);
	_i_var[49] = (_i_var[41])*(_i_var[40]);
	_i_var[50] = (_i_var[43])*(_i_var[42]);
	_i_var[51] = (_i_var[22])-(_i_var[44]);
	_i_var[52] = (_i_var[45])/(_i_var[36]);
	_i_var[53] = (_i_var[47])*(_i_var[46]);
	_i_var[54] = (_i_var[47])*(_i_var[48]);
	_i_var[55] = (_i_var[50])-(_i_var[49]);
	_i_var[56] = (_i_var[52])/(_i_var[51]);
	_i_var[57] = (_i_var[54])*(_i_var[53]);
	_i_var[58] = std::log(_i_var[55]);
	_i_var[59] = (_i_var[56])*(_i_var[47]);
	_i_var[60] = (_i_var[55])*(_i_var[55]);
	_i_var[61] = (_i_var[57])*(_i_var[0]);
	_i_var[62] = (_i_var[23])*(_i_var[58]);
	_i_var[63] = (_i_var[54])*(_i_var[59]);
	_i_var[64] = (_i_var[22])/(_i_var[60]);
	_i_var[65] = (_i_var[61])*(_i_var[23]);
	_i_var[66] = (_i_var[63])*(_i_var[62]);
	_i_var[67] = (_i_var[22])/(_i_var[55]);
	_i_var[68] = -(_i_var[64]);
	_i_var[69] = (_i_var[66])+(_i_var[65]);
	_i_var[70] = (_i_var[63])*(_i_var[23]);
	_i_var[71] = (_i_var[67])*(_i_var[67]);
	_i_var[72] = (_i_var[69])*(_i_var[68]);
	_i_var[73] = (_i_var[71])*(_i_var[70]);
	_i_var[74] = (_i_var[73])+(_i_var[72]);
	_i_var[75] = (_i_var[69])*(_i_var[67]);
	_i_var[76] = (_i_var[40])*(_i_var[41]);
	_i_var[77] = (_i_var[0])*(_i_var[74]);
	_i_var[78] = (_i_var[42])*(_i_var[43]);
	_i_var[79] = (_i_var[40])*(_i_var[40]);
	_i_var[80] = (_i_var[42])*(_i_var[42]);
	_i_var[81] = (_i_var[75])*(_i_var[0]);
	_i_var[82] = (_i_var[76])*(_i_var[74]);
	_i_var[83] = (_i_var[42])*(_i_var[77]);
	_i_var[84] = (_i_var[43])*(_i_var[77]);
	_i_var[85] = (_i_var[78])*(_i_var[74]);
	_i_var[86] = (_i_var[41])*(_i_var[41]);
	_i_var[87] = (_i_var[43])*(_i_var[43]);
	_i_var[88] = (_i_var[79])*(_i_var[74]);
	_i_var[89] = (_i_var[57])*(_i_var[23]);
	_i_var[90] = (_i_var[80])*(_i_var[74]);
	_i_var[91] = (_i_var[82])+(_i_var[81]);
	_i_var[92] = (_i_var[41])*(_i_var[83]);
	_i_var[93] = (_i_var[40])*(_i_var[84]);
	_i_var[94] = (_i_var[85])+(_i_var[75]);
	_i_var[95] = (_i_var[86])*(_i_var[74]);
	_i_var[96] = (_i_var[87])*(_i_var[74]);
	_i_var[97] = (_i_var[89])+(_i_var[88]);
	_i_var[98] = (_i_var[40])*(_i_var[83]);
	_i_var[99] = (_i_var[89])+(_i_var[90]);
	_i_var[100] = (_i_var[18])*(_i_var[91]);
	_i_var[101] = (_i_var[14])*(_i_var[92]);
	_i_var[102] = (_i_var[18])*(_i_var[93]);
	_i_var[103] = (_i_var[14])*(_i_var[94]);
	_i_var[104] = (_i_var[20])*(_i_var[91]);
	_i_var[105] = (_i_var[16])*(_i_var[92]);
	_i_var[106] = (_i_var[16])*(_i_var[94]);
	_i_var[107] = (_i_var[20])*(_i_var[93]);
	_i_var[108] = (_i_var[89])+(_i_var[95]);
	_i_var[109] = (_i_var[41])*(_i_var[84]);
	_i_var[110] = (_i_var[89])+(_i_var[96]);
	_i_var[111] = (_i_var[20])*(_i_var[97]);
	_i_var[112] = (_i_var[16])*(_i_var[98]);
	_i_var[113] = (_i_var[14])*(_i_var[98]);
	_i_var[114] = (_i_var[16])*(_i_var[99]);
	_i_var[115] = (_i_var[101])+(_i_var[100]);
	_i_var[116] = (_i_var[18])*(_i_var[102]);
	_i_var[117] = (_i_var[18])*(_i_var[103]);
	_i_var[118] = (_i_var[105])+(_i_var[104]);
	_i_var[119] = (_i_var[20])*(_i_var[102]);
	_i_var[120] = (_i_var[18])*(_i_var[106]);
	_i_var[121] = (_i_var[18])*(_i_var[107]);
	_i_var[122] = (_i_var[20])*(_i_var[103]);
	_i_var[123] = (_i_var[20])*(_i_var[107]);
	_i_var[124] = (_i_var[20])*(_i_var[106]);
	_i_var[125] = (_i_var[16])*(_i_var[108]);
	_i_var[126] = (_i_var[20])*(_i_var[109]);
	_i_var[127] = (_i_var[18])*(_i_var[109]);
	_i_var[128] = (_i_var[20])*(_i_var[110]);
	_i_var[129] = (_i_var[112])+(_i_var[111]);
	_i_var[130] = (_i_var[20])*(_i_var[113]);
	_i_var[131] = (_i_var[14])*(_i_var[114]);
	_i_var[132] = (_i_var[23])*(_i_var[20]);
	_i_var[133] = (_i_var[16])*(_i_var[16]);
	_i_var[134] = (_i_var[14])*(_i_var[115]);
	_i_var[135] = (_i_var[117])+(_i_var[116]);
	_i_var[136] = (_i_var[14])*(_i_var[118]);
	_i_var[137] = (_i_var[120])+(_i_var[119]);
	_i_var[138] = (_i_var[16])*(_i_var[115]);
	_i_var[139] = (_i_var[122])+(_i_var[121]);
	_i_var[140] = (_i_var[16])*(_i_var[118]);
	_i_var[141] = (_i_var[124])+(_i_var[123]);
	_i_var[142] = (_i_var[23])*(_i_var[18]);
	_i_var[143] = (_i_var[14])*(_i_var[14]);
	_i_var[144] = (_i_var[126])+(_i_var[125]);
	_i_var[145] = (_i_var[16])*(_i_var[127]);
	_i_var[146] = (_i_var[18])*(_i_var[128]);
	_i_var[147] = (_i_var[23])*(_i_var[16]);
	_i_var[148] = (_i_var[20])*(_i_var[20]);
	_i_var[149] = (_i_var[23])*(_i_var[14]);
	_i_var[150] = (_i_var[18])*(_i_var[18]);
	_i_var[151] = (_i_var[18])*(_i_var[129]);
	_i_var[152] = (_i_var[131])+(_i_var[130]);
	_i_var[153] = (_i_var[132])*(_i_var[112]);
	_i_var[154] = (_i_var[133])*(_i_var[99]);
	_i_var[155] = (_i_var[135])+(_i_var[134]);
	_i_var[156] = (_i_var[137])+(_i_var[136]);
	_i_var[157] = (_i_var[139])+(_i_var[138]);
	_i_var[158] = (_i_var[141])+(_i_var[140]);
	_i_var[159] = (_i_var[142])*(_i_var[113]);
	_i_var[160] = (_i_var[143])*(_i_var[99]);
	_i_var[161] = (_i_var[14])*(_i_var[144]);
	_i_var[162] = (_i_var[146])+(_i_var[145]);
	_i_var[163] = (_i_var[147])*(_i_var[126]);
	_i_var[164] = (_i_var[148])*(_i_var[110]);
	_i_var[165] = (_i_var[149])*(_i_var[127]);
	_i_var[166] = (_i_var[150])*(_i_var[110]);
	_i_var[167] = (_i_var[152])+(_i_var[151]);
	_i_var[168] = (_i_var[148])*(_i_var[97]);
	_i_var[169] = (_i_var[154])+(_i_var[153]);
	_i_var[170] = (_i_var[156])+(_i_var[155]);
	_i_var[171] = (_i_var[158])+(_i_var[157]);
	_i_var[172] = (_i_var[150])*(_i_var[97]);
	_i_var[173] = (_i_var[160])+(_i_var[159]);
	_i_var[174] = (_i_var[162])+(_i_var[161]);
	_i_var[175] = (_i_var[133])*(_i_var[108]);
	_i_var[176] = (_i_var[164])+(_i_var[163]);
	_i_var[177] = (_i_var[143])*(_i_var[108]);
	_i_var[178] = (_i_var[166])+(_i_var[165]);
	_i_var[179] = (_i_var[23])*(_i_var[167]);
	_i_var[180] = (_i_var[169])+(_i_var[168]);
	_i_var[181] = (_i_var[171])+(_i_var[170]);
	_i_var[182] = (_i_var[173])+(_i_var[172]);
	_i_var[183] = (_i_var[23])*(_i_var[174]);
	_i_var[184] = (_i_var[176])+(_i_var[175]);
	_i_var[185] = (_i_var[178])+(_i_var[177]);
	_i_var[186] = (_i_var[180])+(_i_var[179]);
	_i_var[187] = (_i_var[0])*(_i_var[181]);
	_i_var[188] = (_i_var[180])+(_i_var[167]);
	_i_var[189] = (_i_var[167])+(_i_var[182]);
	_i_var[190] = (_i_var[184])+(_i_var[183]);
	_i_var[191] = (_i_var[158])+(_i_var[156]);
	_i_var[192] = (_i_var[184])+(_i_var[174]);
	_i_var[193] = (_i_var[157])+(_i_var[155]);
	_i_var[194] = (_i_var[174])+(_i_var[185]);
	_i_var[195] = (_i_var[186])+(_i_var[182]);
	_i_var[196] = (_i_var[0])*(_i_var[187]);
	_i_var[197] = (_i_var[0])*(_i_var[188]);
	_i_var[198] = (_i_var[0])*(_i_var[171]);
	_i_var[199] = (_i_var[0])*(_i_var[189]);
	_i_var[200] = (_i_var[0])*(_i_var[170]);
	_i_var[201] = (_i_var[190])+(_i_var[185]);
	_i_var[202] = (_i_var[0])*(_i_var[191]);
	_i_var[203] = (_i_var[0])*(_i_var[192]);
	_i_var[204] = (_i_var[0])*(_i_var[193]);
	_i_var[205] = (_i_var[0])*(_i_var[194]);
	energyhessian(0,0) = _i_var[195];
	energyhessian(1,0) = _i_var[196];
	energyhessian(2,0) = _i_var[197];
	energyhessian(3,0) = _i_var[198];
	energyhessian(4,0) = _i_var[199];
	energyhessian(5,0) = _i_var[200];
	energyhessian(0,1) = _i_var[196];
	energyhessian(1,1) = _i_var[201];
	energyhessian(2,1) = _i_var[202];
	energyhessian(3,1) = _i_var[203];
	energyhessian(4,1) = _i_var[204];
	energyhessian(5,1) = _i_var[205];
	energyhessian(0,2) = _i_var[197];
	energyhessian(1,2) = _i_var[202];
	energyhessian(2,2) = _i_var[180];
	energyhessian(3,2) = _i_var[158];
	energyhessian(4,2) = _i_var[167];
	energyhessian(5,2) = _i_var[156];
	energyhessian(0,3) = _i_var[198];
	energyhessian(1,3) = _i_var[203];
	energyhessian(2,3) = _i_var[158];
	energyhessian(3,3) = _i_var[184];
	energyhessian(4,3) = _i_var[157];
	energyhessian(5,3) = _i_var[174];
	energyhessian(0,4) = _i_var[199];
	energyhessian(1,4) = _i_var[204];
	energyhessian(2,4) = _i_var[167];
	energyhessian(3,4) = _i_var[157];
	energyhessian(4,4) = _i_var[182];
	energyhessian(5,4) = _i_var[155];
	energyhessian(0,5) = _i_var[200];
	energyhessian(1,5) = _i_var[205];
	energyhessian(2,5) = _i_var[156];
	energyhessian(3,5) = _i_var[174];
	energyhessian(4,5) = _i_var[155];
	energyhessian(5,5) = _i_var[185];
}
