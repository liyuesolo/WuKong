#include "../../include/autodiff/PBCEnergy.h"

void computeStrainMatchingEnergy(double stiffness, const Eigen::Matrix<double,3,1> & epsilon, const Eigen::Matrix<double,4,2> & x, const Eigen::Matrix<double,4,2> & X, double& energy){
	double _i_var[18];
	_i_var[0] = 1;
	_i_var[1] = (epsilon(1,0))+(_i_var[0]);
	_i_var[2] = (X(0,1))-(X(1,0));
	_i_var[3] = (epsilon(0,0))+(_i_var[0]);
	_i_var[4] = (X(1,0))-(X(0,0));
	_i_var[5] = (_i_var[2])*(_i_var[1]);
	_i_var[6] = (x(3,0))-(x(0,0));
	_i_var[7] = (_i_var[4])*(_i_var[3]);
	_i_var[8] = (x(1,0))-(x(0,0));
	_i_var[9] = (_i_var[6])-(_i_var[5]);
	_i_var[10] = 0.5;
	_i_var[11] = (_i_var[8])-(_i_var[7]);
	_i_var[12] = (_i_var[9])*(_i_var[9]);
	_i_var[13] = (_i_var[10])*(stiffness);
	_i_var[14] = (_i_var[11])*(_i_var[11]);
	_i_var[15] = (_i_var[13])*(_i_var[12]);
	_i_var[16] = (_i_var[13])*(_i_var[14]);
	_i_var[17] = (_i_var[16])+(_i_var[15]);
	energy = _i_var[17];
}
void computeStrainMatchingEnergyGradient(double stiffness, const Eigen::Matrix<double,3,1> & epsilon, const Eigen::Matrix<double,4,2> & x, const Eigen::Matrix<double,4,2> & X, Eigen::Matrix<double, 8, 1>& energygradient){
	double _i_var[23];
	_i_var[0] = 1;
	_i_var[1] = (epsilon(1,0))+(_i_var[0]);
	_i_var[2] = (X(0,1))-(X(1,0));
	_i_var[3] = (epsilon(0,0))+(_i_var[0]);
	_i_var[4] = (X(1,0))-(X(0,0));
	_i_var[5] = (_i_var[2])*(_i_var[1]);
	_i_var[6] = (x(3,0))-(x(0,0));
	_i_var[7] = 0.5;
	_i_var[8] = (_i_var[4])*(_i_var[3]);
	_i_var[9] = (x(1,0))-(x(0,0));
	_i_var[10] = (_i_var[6])-(_i_var[5]);
	_i_var[11] = (_i_var[7])*(stiffness);
	_i_var[12] = (_i_var[9])-(_i_var[8]);
	_i_var[13] = (_i_var[11])*(_i_var[10]);
	_i_var[14] = 2;
	_i_var[15] = (_i_var[11])*(_i_var[12]);
	_i_var[16] = -1;
	_i_var[17] = (_i_var[14])*(_i_var[13]);
	_i_var[18] = (_i_var[14])*(_i_var[15]);
	_i_var[19] = (_i_var[17])*(_i_var[16]);
	_i_var[20] = (_i_var[18])*(_i_var[16]);
	_i_var[21] = (_i_var[20])+(_i_var[19]);
	_i_var[22] = 0;
	energygradient(0,0) = _i_var[21];
	energygradient(1,0) = _i_var[22];
	energygradient(2,0) = _i_var[18];
	energygradient(3,0) = _i_var[22];
	energygradient(4,0) = _i_var[22];
	energygradient(5,0) = _i_var[22];
	energygradient(6,0) = _i_var[17];
	energygradient(7,0) = _i_var[22];
}
void computeStrainMatchingEnergyHessian(double stiffness, const Eigen::Matrix<double,3,1> & epsilon, const Eigen::Matrix<double,4,2> & x, const Eigen::Matrix<double,4,2> & X, Eigen::Matrix<double, 8, 8>& energyhessian){
	double _i_var[8];
	_i_var[0] = 0.5;
	_i_var[1] = 2;
	_i_var[2] = (_i_var[0])*(stiffness);
	_i_var[3] = (_i_var[2])*(_i_var[1]);
	_i_var[4] = -1;
	_i_var[5] = (_i_var[1])*(_i_var[3]);
	_i_var[6] = 0;
	_i_var[7] = (_i_var[4])*(_i_var[3]);
	energyhessian(0,0) = _i_var[5];
	energyhessian(1,0) = _i_var[6];
	energyhessian(2,0) = _i_var[7];
	energyhessian(3,0) = _i_var[6];
	energyhessian(4,0) = _i_var[6];
	energyhessian(5,0) = _i_var[6];
	energyhessian(6,0) = _i_var[7];
	energyhessian(7,0) = _i_var[6];
	energyhessian(0,1) = _i_var[6];
	energyhessian(1,1) = _i_var[6];
	energyhessian(2,1) = _i_var[6];
	energyhessian(3,1) = _i_var[6];
	energyhessian(4,1) = _i_var[6];
	energyhessian(5,1) = _i_var[6];
	energyhessian(6,1) = _i_var[6];
	energyhessian(7,1) = _i_var[6];
	energyhessian(0,2) = _i_var[7];
	energyhessian(1,2) = _i_var[6];
	energyhessian(2,2) = _i_var[3];
	energyhessian(3,2) = _i_var[6];
	energyhessian(4,2) = _i_var[6];
	energyhessian(5,2) = _i_var[6];
	energyhessian(6,2) = _i_var[6];
	energyhessian(7,2) = _i_var[6];
	energyhessian(0,3) = _i_var[6];
	energyhessian(1,3) = _i_var[6];
	energyhessian(2,3) = _i_var[6];
	energyhessian(3,3) = _i_var[6];
	energyhessian(4,3) = _i_var[6];
	energyhessian(5,3) = _i_var[6];
	energyhessian(6,3) = _i_var[6];
	energyhessian(7,3) = _i_var[6];
	energyhessian(0,4) = _i_var[6];
	energyhessian(1,4) = _i_var[6];
	energyhessian(2,4) = _i_var[6];
	energyhessian(3,4) = _i_var[6];
	energyhessian(4,4) = _i_var[6];
	energyhessian(5,4) = _i_var[6];
	energyhessian(6,4) = _i_var[6];
	energyhessian(7,4) = _i_var[6];
	energyhessian(0,5) = _i_var[6];
	energyhessian(1,5) = _i_var[6];
	energyhessian(2,5) = _i_var[6];
	energyhessian(3,5) = _i_var[6];
	energyhessian(4,5) = _i_var[6];
	energyhessian(5,5) = _i_var[6];
	energyhessian(6,5) = _i_var[6];
	energyhessian(7,5) = _i_var[6];
	energyhessian(0,6) = _i_var[7];
	energyhessian(1,6) = _i_var[6];
	energyhessian(2,6) = _i_var[6];
	energyhessian(3,6) = _i_var[6];
	energyhessian(4,6) = _i_var[6];
	energyhessian(5,6) = _i_var[6];
	energyhessian(6,6) = _i_var[3];
	energyhessian(7,6) = _i_var[6];
	energyhessian(0,7) = _i_var[6];
	energyhessian(1,7) = _i_var[6];
	energyhessian(2,7) = _i_var[6];
	energyhessian(3,7) = _i_var[6];
	energyhessian(4,7) = _i_var[6];
	energyhessian(5,7) = _i_var[6];
	energyhessian(6,7) = _i_var[6];
	energyhessian(7,7) = _i_var[6];
}