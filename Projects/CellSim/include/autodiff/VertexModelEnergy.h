#ifndef VERTEX_MODEL_ENERGY_H
#define VERTEX_MODEL_ENERGY_H

#include "../VecMatDef.h"
#include <iostream>

double computeEdgeLength(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1){
	double _i_var[9];
	_i_var[0] = (r1(1,0))-(r0(1,0));
	_i_var[1] = (r1(0,0))-(r0(0,0));
	_i_var[2] = (r1(2,0))-(r0(2,0));
	_i_var[3] = (_i_var[0])*(_i_var[0]);
	_i_var[4] = (_i_var[1])*(_i_var[1]);
	_i_var[5] = (_i_var[2])*(_i_var[2]);
	_i_var[6] = (_i_var[4])+(_i_var[3]);
	_i_var[7] = (_i_var[6])+(_i_var[5]);
	_i_var[8] = std::sqrt(_i_var[7]);
	return _i_var[8];
}
void computeEdgeLengthGradient(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, Matrix<double, 6, 1>& energygradient){
	double _i_var[23];
	_i_var[0] = (r1(1,0))-(r0(1,0));
	_i_var[1] = (r1(0,0))-(r0(0,0));
	_i_var[2] = (r1(2,0))-(r0(2,0));
	_i_var[3] = (_i_var[0])*(_i_var[0]);
	_i_var[4] = (_i_var[1])*(_i_var[1]);
	_i_var[5] = (_i_var[2])*(_i_var[2]);
	_i_var[6] = (_i_var[4])+(_i_var[3]);
	_i_var[7] = (_i_var[6])+(_i_var[5]);
	_i_var[8] = std::sqrt(_i_var[7]);
	_i_var[9] = 2;
	_i_var[10] = (_i_var[9])*(_i_var[8]);
	_i_var[11] = 1;
	_i_var[12] = (_i_var[11])/(_i_var[10]);
	_i_var[13] = (_i_var[12])*(_i_var[1]);
	_i_var[14] = (_i_var[12])*(_i_var[0]);
	_i_var[15] = (_i_var[12])*(_i_var[2]);
	_i_var[16] = -1;
	_i_var[17] = (_i_var[9])*(_i_var[13]);
	_i_var[18] = (_i_var[9])*(_i_var[14]);
	_i_var[19] = (_i_var[9])*(_i_var[15]);
	_i_var[20] = (_i_var[17])*(_i_var[16]);
	_i_var[21] = (_i_var[18])*(_i_var[16]);
	_i_var[22] = (_i_var[19])*(_i_var[16]);
	energygradient(0,0) = _i_var[20];
	energygradient(1,0) = _i_var[21];
	energygradient(2,0) = _i_var[22];
	energygradient(3,0) = _i_var[17];
	energygradient(4,0) = _i_var[18];
	energygradient(5,0) = _i_var[19];
}
void computeEdgeLengthHessian(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, Matrix<double, 6, 6>& energyhessian){
	double _i_var[46];
	_i_var[0] = (r1(1,0))-(r0(1,0));
	_i_var[1] = (r1(0,0))-(r0(0,0));
	_i_var[2] = (r1(2,0))-(r0(2,0));
	_i_var[3] = (_i_var[0])*(_i_var[0]);
	_i_var[4] = (_i_var[1])*(_i_var[1]);
	_i_var[5] = (_i_var[2])*(_i_var[2]);
	_i_var[6] = (_i_var[4])+(_i_var[3]);
	_i_var[7] = (_i_var[6])+(_i_var[5]);
	_i_var[8] = std::sqrt(_i_var[7]);
	_i_var[9] = 2;
	_i_var[10] = (_i_var[9])*(_i_var[8]);
	_i_var[11] = (_i_var[10])*(_i_var[10]);
	_i_var[12] = 1;
	_i_var[13] = (_i_var[12])/(_i_var[11]);
	_i_var[14] = -(_i_var[13]);
	_i_var[15] = (_i_var[12])/(_i_var[10]);
	_i_var[16] = (_i_var[14])*(_i_var[9]);
	_i_var[17] = (_i_var[16])*(_i_var[15]);
	_i_var[18] = (_i_var[9])*(_i_var[1]);
	_i_var[19] = (_i_var[9])*(_i_var[2]);
	_i_var[20] = (_i_var[9])*(_i_var[0]);
	_i_var[21] = (_i_var[18])*(_i_var[17]);
	_i_var[22] = (_i_var[19])*(_i_var[17]);
	_i_var[23] = (_i_var[18])*(_i_var[18]);
	_i_var[24] = (_i_var[20])*(_i_var[20]);
	_i_var[25] = (_i_var[19])*(_i_var[19]);
	_i_var[26] = (_i_var[20])*(_i_var[21]);
	_i_var[27] = -1;
	_i_var[28] = (_i_var[18])*(_i_var[22]);
	_i_var[29] = (_i_var[15])*(_i_var[9]);
	_i_var[30] = (_i_var[23])*(_i_var[17]);
	_i_var[31] = (_i_var[20])*(_i_var[22]);
	_i_var[32] = (_i_var[24])*(_i_var[17]);
	_i_var[33] = (_i_var[25])*(_i_var[17]);
	_i_var[34] = (_i_var[27])*(_i_var[26]);
	_i_var[35] = (_i_var[27])*(_i_var[28]);
	_i_var[36] = (_i_var[30])+(_i_var[29]);
	_i_var[37] = (_i_var[27])*(_i_var[31]);
	_i_var[38] = (_i_var[32])+(_i_var[29]);
	_i_var[39] = (_i_var[33])+(_i_var[29]);
	_i_var[40] = (_i_var[27])*(_i_var[34]);
	_i_var[41] = (_i_var[27])*(_i_var[35]);
	_i_var[42] = (_i_var[27])*(_i_var[36]);
	_i_var[43] = (_i_var[27])*(_i_var[37]);
	_i_var[44] = (_i_var[27])*(_i_var[38]);
	_i_var[45] = (_i_var[27])*(_i_var[39]);
	energyhessian(0,0) = _i_var[36];
	energyhessian(1,0) = _i_var[40];
	energyhessian(2,0) = _i_var[41];
	energyhessian(3,0) = _i_var[42];
	energyhessian(4,0) = _i_var[34];
	energyhessian(5,0) = _i_var[35];
	energyhessian(0,1) = _i_var[40];
	energyhessian(1,1) = _i_var[38];
	energyhessian(2,1) = _i_var[43];
	energyhessian(3,1) = _i_var[34];
	energyhessian(4,1) = _i_var[44];
	energyhessian(5,1) = _i_var[37];
	energyhessian(0,2) = _i_var[41];
	energyhessian(1,2) = _i_var[43];
	energyhessian(2,2) = _i_var[39];
	energyhessian(3,2) = _i_var[35];
	energyhessian(4,2) = _i_var[37];
	energyhessian(5,2) = _i_var[45];
	energyhessian(0,3) = _i_var[42];
	energyhessian(1,3) = _i_var[34];
	energyhessian(2,3) = _i_var[35];
	energyhessian(3,3) = _i_var[36];
	energyhessian(4,3) = _i_var[26];
	energyhessian(5,3) = _i_var[28];
	energyhessian(0,4) = _i_var[34];
	energyhessian(1,4) = _i_var[44];
	energyhessian(2,4) = _i_var[37];
	energyhessian(3,4) = _i_var[26];
	energyhessian(4,4) = _i_var[38];
	energyhessian(5,4) = _i_var[31];
	energyhessian(0,5) = _i_var[35];
	energyhessian(1,5) = _i_var[37];
	energyhessian(2,5) = _i_var[45];
	energyhessian(3,5) = _i_var[28];
	energyhessian(4,5) = _i_var[31];
	energyhessian(5,5) = _i_var[39];
}


double computeVolume(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, const Matrix<double,3,1> & face_centroid, const Matrix<double,3,1> & cell_centroid){
	double _i_var[22];
	_i_var[0] = (r0(2,0))-(face_centroid(2,0));
	_i_var[1] = (r1(0,0))-(face_centroid(0,0));
	_i_var[2] = (r0(0,0))-(face_centroid(0,0));
	_i_var[3] = (r1(2,0))-(face_centroid(2,0));
	_i_var[4] = (r0(1,0))-(face_centroid(1,0));
	_i_var[5] = (r1(1,0))-(face_centroid(1,0));
	_i_var[6] = (_i_var[1])*(_i_var[0]);
	_i_var[7] = (_i_var[3])*(_i_var[2]);
	_i_var[8] = (_i_var[3])*(_i_var[4]);
	_i_var[9] = (_i_var[5])*(_i_var[0]);
	_i_var[10] = (_i_var[5])*(_i_var[2]);
	_i_var[11] = (_i_var[1])*(_i_var[4]);
	_i_var[12] = (_i_var[7])-(_i_var[6]);
	_i_var[13] = (_i_var[9])-(_i_var[8]);
	_i_var[14] = (_i_var[11])-(_i_var[10]);
	_i_var[15] = (_i_var[12])*(cell_centroid(1,0));
	_i_var[16] = (_i_var[13])*(cell_centroid(0,0));
	_i_var[17] = (_i_var[14])*(cell_centroid(2,0));
	_i_var[18] = (_i_var[16])+(_i_var[15]);
	_i_var[19] = (_i_var[18])+(_i_var[17]);
	_i_var[20] = 0.16666666666666666;
	_i_var[21] = (_i_var[20])*(_i_var[19]);
	return _i_var[21];
}
void computeVolumeGradient(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, const Matrix<double,3,1> & face_centroid, const Matrix<double,3,1> & cell_centroid, Matrix<double, 12, 1>& energygradient){
	double _i_var[53];
	_i_var[0] = 0.16666666666666666;
	_i_var[1] = -1;
	_i_var[2] = (_i_var[0])*(cell_centroid(1,0));
	_i_var[3] = (_i_var[0])*(cell_centroid(2,0));
	_i_var[4] = (_i_var[0])*(cell_centroid(0,0));
	_i_var[5] = (r0(2,0))-(face_centroid(2,0));
	_i_var[6] = (_i_var[2])*(_i_var[1]);
	_i_var[7] = (r0(1,0))-(face_centroid(1,0));
	_i_var[8] = (r1(2,0))-(face_centroid(2,0));
	_i_var[9] = (r1(1,0))-(face_centroid(1,0));
	_i_var[10] = (_i_var[3])*(_i_var[1]);
	_i_var[11] = (_i_var[4])*(_i_var[1]);
	_i_var[12] = (r1(0,0))-(face_centroid(0,0));
	_i_var[13] = (r0(0,0))-(face_centroid(0,0));
	_i_var[14] = (_i_var[6])*(_i_var[5]);
	_i_var[15] = (_i_var[3])*(_i_var[7]);
	_i_var[16] = (_i_var[2])*(_i_var[8]);
	_i_var[17] = (_i_var[10])*(_i_var[9]);
	_i_var[18] = (_i_var[11])*(_i_var[8]);
	_i_var[19] = (_i_var[3])*(_i_var[12]);
	_i_var[20] = (_i_var[4])*(_i_var[5]);
	_i_var[21] = (_i_var[10])*(_i_var[13]);
	_i_var[22] = (_i_var[6])*(_i_var[12]);
	_i_var[23] = (_i_var[4])*(_i_var[9]);
	_i_var[24] = (_i_var[2])*(_i_var[13]);
	_i_var[25] = (_i_var[11])*(_i_var[7]);
	_i_var[26] = (_i_var[15])+(_i_var[14]);
	_i_var[27] = (_i_var[17])+(_i_var[16]);
	_i_var[28] = (_i_var[19])+(_i_var[18]);
	_i_var[29] = (_i_var[21])+(_i_var[20]);
	_i_var[30] = (_i_var[23])+(_i_var[22]);
	_i_var[31] = (_i_var[25])+(_i_var[24]);
	_i_var[32] = (_i_var[8])*(_i_var[7]);
	_i_var[33] = (_i_var[9])*(_i_var[5]);
	_i_var[34] = (_i_var[12])*(_i_var[5]);
	_i_var[35] = (_i_var[8])*(_i_var[13]);
	_i_var[36] = (_i_var[9])*(_i_var[13]);
	_i_var[37] = (_i_var[12])*(_i_var[7]);
	_i_var[38] = (_i_var[26])*(_i_var[1]);
	_i_var[39] = (_i_var[27])*(_i_var[1]);
	_i_var[40] = (_i_var[28])*(_i_var[1]);
	_i_var[41] = (_i_var[29])*(_i_var[1]);
	_i_var[42] = (_i_var[30])*(_i_var[1]);
	_i_var[43] = (_i_var[31])*(_i_var[1]);
	_i_var[44] = (_i_var[33])-(_i_var[32]);
	_i_var[45] = (_i_var[35])-(_i_var[34]);
	_i_var[46] = (_i_var[37])-(_i_var[36]);
	_i_var[47] = (_i_var[39])+(_i_var[38]);
	_i_var[48] = (_i_var[41])+(_i_var[40]);
	_i_var[49] = (_i_var[43])+(_i_var[42]);
	_i_var[50] = (_i_var[0])*(_i_var[44]);
	_i_var[51] = (_i_var[0])*(_i_var[45]);
	_i_var[52] = (_i_var[0])*(_i_var[46]);
	energygradient(0,0) = _i_var[27];
	energygradient(1,0) = _i_var[28];
	energygradient(2,0) = _i_var[30];
	energygradient(3,0) = _i_var[26];
	energygradient(4,0) = _i_var[29];
	energygradient(5,0) = _i_var[31];
	energygradient(6,0) = _i_var[47];
	energygradient(7,0) = _i_var[48];
	energygradient(8,0) = _i_var[49];
	energygradient(9,0) = _i_var[50];
	energygradient(10,0) = _i_var[51];
	energygradient(11,0) = _i_var[52];
}

void computeVolumeHessian(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, const Matrix<double,3,1> & face_centroid, const Matrix<double,3,1> & cell_centroid, Matrix<double, 12, 12>& energyhessian){
	double _i_var[61];
	_i_var[0] = 0.16666666666666666;
	_i_var[1] = -1;
	_i_var[2] = (_i_var[0])*(cell_centroid(2,0));
	_i_var[3] = (_i_var[0])*(cell_centroid(1,0));
	_i_var[4] = (_i_var[0])*(cell_centroid(0,0));
	_i_var[5] = (_i_var[2])*(_i_var[1]);
	_i_var[6] = (_i_var[3])*(_i_var[1]);
	_i_var[7] = -0.16666666666666666;
	_i_var[8] = (r0(2,0))-(face_centroid(2,0));
	_i_var[9] = (r1(2,0))-(face_centroid(2,0));
	_i_var[10] = (r0(1,0))-(face_centroid(1,0));
	_i_var[11] = (r1(1,0))-(face_centroid(1,0));
	_i_var[12] = (_i_var[4])*(_i_var[1]);
	_i_var[13] = (r1(0,0))-(face_centroid(0,0));
	_i_var[14] = (r0(0,0))-(face_centroid(0,0));
	_i_var[15] = (_i_var[1])*(_i_var[2]);
	_i_var[16] = (_i_var[1])*(_i_var[5]);
	_i_var[17] = (_i_var[1])*(_i_var[6]);
	_i_var[18] = (_i_var[1])*(_i_var[3]);
	_i_var[19] = (_i_var[8])*(_i_var[7]);
	_i_var[20] = (_i_var[9])*(_i_var[0]);
	_i_var[21] = (_i_var[10])*(_i_var[0]);
	_i_var[22] = (_i_var[11])*(_i_var[7]);
	_i_var[23] = (_i_var[1])*(_i_var[4]);
	_i_var[24] = (_i_var[1])*(_i_var[12]);
	_i_var[25] = (_i_var[9])*(_i_var[7]);
	_i_var[26] = (_i_var[8])*(_i_var[0]);
	_i_var[27] = (_i_var[13])*(_i_var[0]);
	_i_var[28] = (_i_var[14])*(_i_var[7]);
	_i_var[29] = (_i_var[11])*(_i_var[0]);
	_i_var[30] = (_i_var[10])*(_i_var[7]);
	_i_var[31] = (_i_var[13])*(_i_var[7]);
	_i_var[32] = (_i_var[14])*(_i_var[0]);
	_i_var[33] = (_i_var[1])*(_i_var[15]);
	_i_var[34] = (_i_var[1])*(_i_var[16]);
	_i_var[35] = (_i_var[1])*(_i_var[17]);
	_i_var[36] = (_i_var[1])*(_i_var[18]);
	_i_var[37] = (_i_var[1])*(_i_var[19]);
	_i_var[38] = (_i_var[1])*(_i_var[20]);
	_i_var[39] = (_i_var[1])*(_i_var[21]);
	_i_var[40] = (_i_var[1])*(_i_var[22]);
	_i_var[41] = (_i_var[1])*(_i_var[23]);
	_i_var[42] = (_i_var[1])*(_i_var[24]);
	_i_var[43] = (_i_var[1])*(_i_var[25]);
	_i_var[44] = (_i_var[1])*(_i_var[26]);
	_i_var[45] = (_i_var[1])*(_i_var[27]);
	_i_var[46] = (_i_var[1])*(_i_var[28]);
	_i_var[47] = (_i_var[1])*(_i_var[29]);
	_i_var[48] = (_i_var[1])*(_i_var[30]);
	_i_var[49] = (_i_var[1])*(_i_var[31]);
	_i_var[50] = (_i_var[1])*(_i_var[32]);
	_i_var[51] = 0;
	_i_var[52] = (_i_var[34])+(_i_var[33]);
	_i_var[53] = (_i_var[36])+(_i_var[35]);
	_i_var[54] = (_i_var[38])+(_i_var[37]);
	_i_var[55] = (_i_var[40])+(_i_var[39]);
	_i_var[56] = (_i_var[42])+(_i_var[41]);
	_i_var[57] = (_i_var[44])+(_i_var[43]);
	_i_var[58] = (_i_var[46])+(_i_var[45]);
	_i_var[59] = (_i_var[48])+(_i_var[47]);
	_i_var[60] = (_i_var[50])+(_i_var[49]);
	energyhessian(0,0) = _i_var[51];
	energyhessian(1,0) = _i_var[51];
	energyhessian(2,0) = _i_var[51];
	energyhessian(3,0) = _i_var[51];
	energyhessian(4,0) = _i_var[5];
	energyhessian(5,0) = _i_var[3];
	energyhessian(6,0) = _i_var[51];
	energyhessian(7,0) = _i_var[16];
	energyhessian(8,0) = _i_var[18];
	energyhessian(9,0) = _i_var[51];
	energyhessian(10,0) = _i_var[20];
	energyhessian(11,0) = _i_var[22];
	energyhessian(0,1) = _i_var[51];
	energyhessian(1,1) = _i_var[51];
	energyhessian(2,1) = _i_var[51];
	energyhessian(3,1) = _i_var[2];
	energyhessian(4,1) = _i_var[51];
	energyhessian(5,1) = _i_var[12];
	energyhessian(6,1) = _i_var[15];
	energyhessian(7,1) = _i_var[51];
	energyhessian(8,1) = _i_var[24];
	energyhessian(9,1) = _i_var[25];
	energyhessian(10,1) = _i_var[51];
	energyhessian(11,1) = _i_var[27];
	energyhessian(0,2) = _i_var[51];
	energyhessian(1,2) = _i_var[51];
	energyhessian(2,2) = _i_var[51];
	energyhessian(3,2) = _i_var[6];
	energyhessian(4,2) = _i_var[4];
	energyhessian(5,2) = _i_var[51];
	energyhessian(6,2) = _i_var[17];
	energyhessian(7,2) = _i_var[23];
	energyhessian(8,2) = _i_var[51];
	energyhessian(9,2) = _i_var[29];
	energyhessian(10,2) = _i_var[31];
	energyhessian(11,2) = _i_var[51];
	energyhessian(0,3) = _i_var[51];
	energyhessian(1,3) = _i_var[2];
	energyhessian(2,3) = _i_var[6];
	energyhessian(3,3) = _i_var[51];
	energyhessian(4,3) = _i_var[51];
	energyhessian(5,3) = _i_var[51];
	energyhessian(6,3) = _i_var[51];
	energyhessian(7,3) = _i_var[15];
	energyhessian(8,3) = _i_var[17];
	energyhessian(9,3) = _i_var[51];
	energyhessian(10,3) = _i_var[19];
	energyhessian(11,3) = _i_var[21];
	energyhessian(0,4) = _i_var[5];
	energyhessian(1,4) = _i_var[51];
	energyhessian(2,4) = _i_var[4];
	energyhessian(3,4) = _i_var[51];
	energyhessian(4,4) = _i_var[51];
	energyhessian(5,4) = _i_var[51];
	energyhessian(6,4) = _i_var[16];
	energyhessian(7,4) = _i_var[51];
	energyhessian(8,4) = _i_var[23];
	energyhessian(9,4) = _i_var[26];
	energyhessian(10,4) = _i_var[51];
	energyhessian(11,4) = _i_var[28];
	energyhessian(0,5) = _i_var[3];
	energyhessian(1,5) = _i_var[12];
	energyhessian(2,5) = _i_var[51];
	energyhessian(3,5) = _i_var[51];
	energyhessian(4,5) = _i_var[51];
	energyhessian(5,5) = _i_var[51];
	energyhessian(6,5) = _i_var[18];
	energyhessian(7,5) = _i_var[24];
	energyhessian(8,5) = _i_var[51];
	energyhessian(9,5) = _i_var[30];
	energyhessian(10,5) = _i_var[32];
	energyhessian(11,5) = _i_var[51];
	energyhessian(0,6) = _i_var[51];
	energyhessian(1,6) = _i_var[15];
	energyhessian(2,6) = _i_var[17];
	energyhessian(3,6) = _i_var[51];
	energyhessian(4,6) = _i_var[16];
	energyhessian(5,6) = _i_var[18];
	energyhessian(6,6) = _i_var[51];
	energyhessian(7,6) = _i_var[52];
	energyhessian(8,6) = _i_var[53];
	energyhessian(9,6) = _i_var[51];
	energyhessian(10,6) = _i_var[54];
	energyhessian(11,6) = _i_var[55];
	energyhessian(0,7) = _i_var[16];
	energyhessian(1,7) = _i_var[51];
	energyhessian(2,7) = _i_var[23];
	energyhessian(3,7) = _i_var[15];
	energyhessian(4,7) = _i_var[51];
	energyhessian(5,7) = _i_var[24];
	energyhessian(6,7) = _i_var[52];
	energyhessian(7,7) = _i_var[51];
	energyhessian(8,7) = _i_var[56];
	energyhessian(9,7) = _i_var[57];
	energyhessian(10,7) = _i_var[51];
	energyhessian(11,7) = _i_var[58];
	energyhessian(0,8) = _i_var[18];
	energyhessian(1,8) = _i_var[24];
	energyhessian(2,8) = _i_var[51];
	energyhessian(3,8) = _i_var[17];
	energyhessian(4,8) = _i_var[23];
	energyhessian(5,8) = _i_var[51];
	energyhessian(6,8) = _i_var[53];
	energyhessian(7,8) = _i_var[56];
	energyhessian(8,8) = _i_var[51];
	energyhessian(9,8) = _i_var[59];
	energyhessian(10,8) = _i_var[60];
	energyhessian(11,8) = _i_var[51];
	energyhessian(0,9) = _i_var[51];
	energyhessian(1,9) = _i_var[25];
	energyhessian(2,9) = _i_var[29];
	energyhessian(3,9) = _i_var[51];
	energyhessian(4,9) = _i_var[26];
	energyhessian(5,9) = _i_var[30];
	energyhessian(6,9) = _i_var[51];
	energyhessian(7,9) = _i_var[57];
	energyhessian(8,9) = _i_var[59];
	energyhessian(9,9) = _i_var[51];
	energyhessian(10,9) = _i_var[51];
	energyhessian(11,9) = _i_var[51];
	energyhessian(0,10) = _i_var[20];
	energyhessian(1,10) = _i_var[51];
	energyhessian(2,10) = _i_var[31];
	energyhessian(3,10) = _i_var[19];
	energyhessian(4,10) = _i_var[51];
	energyhessian(5,10) = _i_var[32];
	energyhessian(6,10) = _i_var[54];
	energyhessian(7,10) = _i_var[51];
	energyhessian(8,10) = _i_var[60];
	energyhessian(9,10) = _i_var[51];
	energyhessian(10,10) = _i_var[51];
	energyhessian(11,10) = _i_var[51];
	energyhessian(0,11) = _i_var[22];
	energyhessian(1,11) = _i_var[27];
	energyhessian(2,11) = _i_var[51];
	energyhessian(3,11) = _i_var[21];
	energyhessian(4,11) = _i_var[28];
	energyhessian(5,11) = _i_var[51];
	energyhessian(6,11) = _i_var[55];
	energyhessian(7,11) = _i_var[58];
	energyhessian(8,11) = _i_var[51];
	energyhessian(9,11) = _i_var[51];
	energyhessian(10,11) = _i_var[51];
	energyhessian(11,11) = _i_var[51];
}


double computeArea(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, const Matrix<double,3,1> & face_centroid){
	double _i_var[23];
	_i_var[0] = (r0(2,0))-(face_centroid(2,0));
	_i_var[1] = (r1(0,0))-(face_centroid(0,0));
	_i_var[2] = (r0(0,0))-(face_centroid(0,0));
	_i_var[3] = (r1(2,0))-(face_centroid(2,0));
	_i_var[4] = (r0(1,0))-(face_centroid(1,0));
	_i_var[5] = (r1(1,0))-(face_centroid(1,0));
	_i_var[6] = (_i_var[1])*(_i_var[0]);
	_i_var[7] = (_i_var[3])*(_i_var[2]);
	_i_var[8] = (_i_var[3])*(_i_var[4]);
	_i_var[9] = (_i_var[5])*(_i_var[0]);
	_i_var[10] = (_i_var[5])*(_i_var[2]);
	_i_var[11] = (_i_var[1])*(_i_var[4]);
	_i_var[12] = (_i_var[7])-(_i_var[6]);
	_i_var[13] = (_i_var[9])-(_i_var[8]);
	_i_var[14] = (_i_var[11])-(_i_var[10]);
	_i_var[15] = (_i_var[12])*(_i_var[12]);
	_i_var[16] = (_i_var[13])*(_i_var[13]);
	_i_var[17] = (_i_var[14])*(_i_var[14]);
	_i_var[18] = (_i_var[16])+(_i_var[15]);
	_i_var[19] = (_i_var[18])+(_i_var[17]);
	_i_var[20] = std::sqrt(_i_var[19]);
	_i_var[21] = 0.5;
	_i_var[22] = (_i_var[21])*(_i_var[20]);
	return _i_var[22];
}

void computeAreaGradient(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, const Matrix<double,3,1> & face_centroid, Matrix<double, 9, 1>& energygradient){
	double _i_var[56];
	_i_var[0] = (r0(2,0))-(face_centroid(2,0));
	_i_var[1] = (r1(0,0))-(face_centroid(0,0));
	_i_var[2] = (r0(0,0))-(face_centroid(0,0));
	_i_var[3] = (r1(2,0))-(face_centroid(2,0));
	_i_var[4] = (r0(1,0))-(face_centroid(1,0));
	_i_var[5] = (r1(1,0))-(face_centroid(1,0));
	_i_var[6] = (_i_var[1])*(_i_var[0]);
	_i_var[7] = (_i_var[3])*(_i_var[2]);
	_i_var[8] = (_i_var[3])*(_i_var[4]);
	_i_var[9] = (_i_var[5])*(_i_var[0]);
	_i_var[10] = (_i_var[5])*(_i_var[2]);
	_i_var[11] = (_i_var[1])*(_i_var[4]);
	_i_var[12] = (_i_var[7])-(_i_var[6]);
	_i_var[13] = (_i_var[9])-(_i_var[8]);
	_i_var[14] = (_i_var[11])-(_i_var[10]);
	_i_var[15] = (_i_var[12])*(_i_var[12]);
	_i_var[16] = (_i_var[13])*(_i_var[13]);
	_i_var[17] = (_i_var[14])*(_i_var[14]);
	_i_var[18] = (_i_var[16])+(_i_var[15]);
	_i_var[19] = (_i_var[18])+(_i_var[17]);
	_i_var[20] = std::sqrt(_i_var[19]);
	_i_var[21] = 2;
	_i_var[22] = (_i_var[21])*(_i_var[20]);
	_i_var[23] = 1;
	_i_var[24] = (_i_var[23])/(_i_var[22]);
	_i_var[25] = 0.5;
	_i_var[26] = (_i_var[25])*(_i_var[24]);
	_i_var[27] = (_i_var[26])*(_i_var[14]);
	_i_var[28] = (_i_var[26])*(_i_var[13]);
	_i_var[29] = (_i_var[26])*(_i_var[12]);
	_i_var[30] = -1;
	_i_var[31] = (_i_var[21])*(_i_var[27]);
	_i_var[32] = (_i_var[21])*(_i_var[28]);
	_i_var[33] = (_i_var[21])*(_i_var[29]);
	_i_var[34] = (_i_var[31])*(_i_var[30]);
	_i_var[35] = (_i_var[32])*(_i_var[30]);
	_i_var[36] = (_i_var[33])*(_i_var[30]);
	_i_var[37] = (_i_var[33])*(_i_var[3]);
	_i_var[38] = (_i_var[34])*(_i_var[5]);
	_i_var[39] = (_i_var[35])*(_i_var[3]);
	_i_var[40] = (_i_var[31])*(_i_var[1]);
	_i_var[41] = (_i_var[36])*(_i_var[1]);
	_i_var[42] = (_i_var[32])*(_i_var[5]);
	_i_var[43] = (_i_var[36])*(_i_var[0]);
	_i_var[44] = (_i_var[31])*(_i_var[4]);
	_i_var[45] = (_i_var[32])*(_i_var[0]);
	_i_var[46] = (_i_var[34])*(_i_var[2]);
	_i_var[47] = (_i_var[33])*(_i_var[2]);
	_i_var[48] = (_i_var[35])*(_i_var[4]);
	_i_var[49] = (_i_var[38])+(_i_var[37]);
	_i_var[50] = (_i_var[40])+(_i_var[39]);
	_i_var[51] = (_i_var[42])+(_i_var[41]);
	_i_var[52] = (_i_var[44])+(_i_var[43]);
	_i_var[53] = (_i_var[46])+(_i_var[45]);
	_i_var[54] = (_i_var[48])+(_i_var[47]);
	_i_var[55] = 0;
	energygradient(0,0) = _i_var[49];
	energygradient(1,0) = _i_var[50];
	energygradient(2,0) = _i_var[51];
	energygradient(3,0) = _i_var[52];
	energygradient(4,0) = _i_var[53];
	energygradient(5,0) = _i_var[54];
	energygradient(6,0) = _i_var[55];
	energygradient(7,0) = _i_var[55];
	energygradient(8,0) = _i_var[55];
}
void computeAreaHessian(const Matrix<double,3,1> & r0, const Matrix<double,3,1> & r1, const Matrix<double,3,1> & face_centroid, Matrix<double, 9, 9>& energyhessian){
	double _i_var[232];
	_i_var[0] = (r0(2,0))-(face_centroid(2,0));
	_i_var[1] = (r1(0,0))-(face_centroid(0,0));
	_i_var[2] = (r0(0,0))-(face_centroid(0,0));
	_i_var[3] = (r1(2,0))-(face_centroid(2,0));
	_i_var[4] = (r0(1,0))-(face_centroid(1,0));
	_i_var[5] = (r1(1,0))-(face_centroid(1,0));
	_i_var[6] = (_i_var[1])*(_i_var[0]);
	_i_var[7] = (_i_var[3])*(_i_var[2]);
	_i_var[8] = (_i_var[3])*(_i_var[4]);
	_i_var[9] = (_i_var[5])*(_i_var[0]);
	_i_var[10] = (_i_var[5])*(_i_var[2]);
	_i_var[11] = (_i_var[1])*(_i_var[4]);
	_i_var[12] = (_i_var[7])-(_i_var[6]);
	_i_var[13] = (_i_var[9])-(_i_var[8]);
	_i_var[14] = (_i_var[11])-(_i_var[10]);
	_i_var[15] = (_i_var[12])*(_i_var[12]);
	_i_var[16] = (_i_var[13])*(_i_var[13]);
	_i_var[17] = (_i_var[14])*(_i_var[14]);
	_i_var[18] = (_i_var[16])+(_i_var[15]);
	_i_var[19] = (_i_var[18])+(_i_var[17]);
	_i_var[20] = std::sqrt(_i_var[19]);
	_i_var[21] = 2;
	_i_var[22] = (_i_var[21])*(_i_var[20]);
	_i_var[23] = (_i_var[22])*(_i_var[22]);
	_i_var[24] = 1;
	_i_var[25] = (_i_var[24])/(_i_var[23]);
	_i_var[26] = -(_i_var[25]);
	_i_var[27] = (_i_var[24])/(_i_var[22]);
	_i_var[28] = (_i_var[26])*(_i_var[21]);
	_i_var[29] = (_i_var[28])*(_i_var[27]);
	_i_var[30] = 0.5;
	_i_var[31] = (_i_var[30])*(_i_var[29]);
	_i_var[32] = (_i_var[21])*(_i_var[14]);
	_i_var[33] = (_i_var[32])*(_i_var[31]);
	_i_var[34] = (_i_var[21])*(_i_var[13]);
	_i_var[35] = (_i_var[21])*(_i_var[12]);
	_i_var[36] = (_i_var[34])*(_i_var[33]);
	_i_var[37] = -1;
	_i_var[38] = (_i_var[34])*(_i_var[31]);
	_i_var[39] = (_i_var[30])*(_i_var[27]);
	_i_var[40] = (_i_var[32])*(_i_var[32]);
	_i_var[41] = (_i_var[35])*(_i_var[35]);
	_i_var[42] = (_i_var[35])*(_i_var[33]);
	_i_var[43] = (_i_var[37])*(_i_var[36]);
	_i_var[44] = (_i_var[34])*(_i_var[34]);
	_i_var[45] = (_i_var[35])*(_i_var[38]);
	_i_var[46] = (_i_var[39])*(_i_var[21]);
	_i_var[47] = (_i_var[40])*(_i_var[31]);
	_i_var[48] = (_i_var[41])*(_i_var[31]);
	_i_var[49] = (_i_var[37])*(_i_var[42]);
	_i_var[50] = (_i_var[37])*(_i_var[43]);
	_i_var[51] = (_i_var[44])*(_i_var[31]);
	_i_var[52] = (_i_var[37])*(_i_var[45]);
	_i_var[53] = (_i_var[47])+(_i_var[46]);
	_i_var[54] = (_i_var[48])+(_i_var[46]);
	_i_var[55] = (_i_var[5])*(_i_var[49]);
	_i_var[56] = (_i_var[5])*(_i_var[50]);
	_i_var[57] = (_i_var[51])+(_i_var[46]);
	_i_var[58] = (_i_var[5])*(_i_var[52]);
	_i_var[59] = (_i_var[4])*(_i_var[36]);
	_i_var[60] = (_i_var[37])*(_i_var[53]);
	_i_var[61] = (_i_var[37])*(_i_var[54]);
	_i_var[62] = (_i_var[37])*(_i_var[49]);
	_i_var[63] = (_i_var[39])*(_i_var[32]);
	_i_var[64] = (_i_var[2])*(_i_var[5]);
	_i_var[65] = (_i_var[4])*(_i_var[52]);
	_i_var[66] = (_i_var[2])*(_i_var[55]);
	_i_var[67] = (_i_var[4])*(_i_var[56]);
	_i_var[68] = (_i_var[37])*(_i_var[52]);
	_i_var[69] = (_i_var[37])*(_i_var[57]);
	_i_var[70] = (_i_var[1])*(_i_var[43]);
	_i_var[71] = (_i_var[4])*(_i_var[49]);
	_i_var[72] = (_i_var[0])*(_i_var[58]);
	_i_var[73] = (_i_var[5])*(_i_var[59]);
	_i_var[74] = (_i_var[0])*(_i_var[5]);
	_i_var[75] = (_i_var[2])*(_i_var[43]);
	_i_var[76] = (_i_var[21])*(_i_var[3]);
	_i_var[77] = (_i_var[5])*(_i_var[5]);
	_i_var[78] = (_i_var[3])*(_i_var[52]);
	_i_var[79] = (_i_var[1])*(_i_var[42]);
	_i_var[80] = (_i_var[1])*(_i_var[60]);
	_i_var[81] = (_i_var[3])*(_i_var[61]);
	_i_var[82] = (_i_var[5])*(_i_var[62]);
	_i_var[83] = (_i_var[5])*(_i_var[45]);
	_i_var[84] = (_i_var[5])*(_i_var[43]);
	_i_var[85] = (_i_var[4])*(_i_var[42]);
	_i_var[86] = (_i_var[4])*(_i_var[60]);
	_i_var[87] = (_i_var[0])*(_i_var[45]);
	_i_var[88] = (_i_var[2])*(_i_var[49]);
	_i_var[89] = (_i_var[63])*(_i_var[37]);
	_i_var[90] = (_i_var[64])*(_i_var[53]);
	_i_var[91] = (_i_var[2])*(_i_var[3]);
	_i_var[92] = (_i_var[3])*(_i_var[65]);
	_i_var[93] = (_i_var[67])+(_i_var[66]);
	_i_var[94] = (_i_var[1])*(_i_var[1]);
	_i_var[95] = (_i_var[3])*(_i_var[68]);
	_i_var[96] = (_i_var[1])*(_i_var[49]);
	_i_var[97] = (_i_var[5])*(_i_var[69]);
	_i_var[98] = (_i_var[1])*(_i_var[36]);
	_i_var[99] = (_i_var[4])*(_i_var[43]);
	_i_var[100] = (_i_var[11])*(_i_var[53]);
	_i_var[101] = (_i_var[0])*(_i_var[69]);
	_i_var[102] = (_i_var[2])*(_i_var[50]);
	_i_var[103] = (_i_var[39])*(_i_var[34]);
	_i_var[104] = (_i_var[8])*(_i_var[57]);
	_i_var[105] = (_i_var[4])*(_i_var[70]);
	_i_var[106] = (_i_var[21])*(_i_var[1]);
	_i_var[107] = (_i_var[0])*(_i_var[1]);
	_i_var[108] = (_i_var[1])*(_i_var[71]);
	_i_var[109] = (_i_var[73])+(_i_var[72]);
	_i_var[110] = (_i_var[0])*(_i_var[52]);
	_i_var[111] = (_i_var[2])*(_i_var[62]);
	_i_var[112] = (_i_var[74])*(_i_var[57]);
	_i_var[113] = (_i_var[5])*(_i_var[75]);
	_i_var[114] = (_i_var[2])*(_i_var[61]);
	_i_var[115] = (_i_var[4])*(_i_var[68]);
	_i_var[116] = (_i_var[21])*(_i_var[0]);
	_i_var[117] = (_i_var[4])*(_i_var[4]);
	_i_var[118] = (_i_var[2])*(_i_var[2]);
	_i_var[119] = (_i_var[21])*(_i_var[2]);
	_i_var[120] = (_i_var[3])*(_i_var[3]);
	_i_var[121] = (_i_var[76])*(_i_var[55]);
	_i_var[122] = (_i_var[77])*(_i_var[53]);
	_i_var[123] = (_i_var[79])+(_i_var[78]);
	_i_var[124] = (_i_var[3])*(_i_var[56]);
	_i_var[125] = (_i_var[5])*(_i_var[80]);
	_i_var[126] = (_i_var[82])+(_i_var[81]);
	_i_var[127] = (_i_var[3])*(_i_var[83]);
	_i_var[128] = (_i_var[5])*(_i_var[84]);
	_i_var[129] = (_i_var[3])*(_i_var[85]);
	_i_var[130] = (_i_var[5])*(_i_var[86]);
	_i_var[131] = (_i_var[88])+(_i_var[87]);
	_i_var[132] = (_i_var[0])*(_i_var[84]);
	_i_var[133] = (_i_var[90])+(_i_var[89]);
	_i_var[134] = (_i_var[91])*(_i_var[54]);
	_i_var[135] = (_i_var[93])+(_i_var[92]);
	_i_var[136] = (_i_var[76])*(_i_var[70]);
	_i_var[137] = (_i_var[94])*(_i_var[53]);
	_i_var[138] = (_i_var[96])+(_i_var[95]);
	_i_var[139] = (_i_var[3])*(_i_var[97]);
	_i_var[140] = (_i_var[5])*(_i_var[98]);
	_i_var[141] = (_i_var[3])*(_i_var[99]);
	_i_var[142] = (_i_var[100])+(_i_var[63]);
	_i_var[143] = (_i_var[102])+(_i_var[101]);
	_i_var[144] = (_i_var[0])*(_i_var[98]);
	_i_var[145] = (_i_var[2])*(_i_var[80]);
	_i_var[146] = (_i_var[103])*(_i_var[37]);
	_i_var[147] = (_i_var[105])+(_i_var[104]);
	_i_var[148] = (_i_var[106])*(_i_var[58]);
	_i_var[149] = (_i_var[77])*(_i_var[57]);
	_i_var[150] = (_i_var[39])*(_i_var[35]);
	_i_var[151] = (_i_var[107])*(_i_var[54]);
	_i_var[152] = (_i_var[109])+(_i_var[108]);
	_i_var[153] = (_i_var[111])+(_i_var[110]);
	_i_var[154] = (_i_var[113])+(_i_var[112]);
	_i_var[155] = (_i_var[115])+(_i_var[114]);
	_i_var[156] = (_i_var[2])*(_i_var[83]);
	_i_var[157] = (_i_var[4])*(_i_var[97]);
	_i_var[158] = (_i_var[0])*(_i_var[0]);
	_i_var[159] = (_i_var[116])*(_i_var[71]);
	_i_var[160] = (_i_var[117])*(_i_var[53]);
	_i_var[161] = (_i_var[0])*(_i_var[59]);
	_i_var[162] = (_i_var[2])*(_i_var[86]);
	_i_var[163] = (_i_var[2])*(_i_var[85]);
	_i_var[164] = (_i_var[4])*(_i_var[99]);
	_i_var[165] = (_i_var[116])*(_i_var[75]);
	_i_var[166] = (_i_var[118])*(_i_var[53]);
	_i_var[167] = (_i_var[119])*(_i_var[65]);
	_i_var[168] = (_i_var[117])*(_i_var[57]);
	_i_var[169] = (_i_var[120])*(_i_var[54]);
	_i_var[170] = (_i_var[122])+(_i_var[121]);
	_i_var[171] = (_i_var[3])*(_i_var[123]);
	_i_var[172] = (_i_var[125])+(_i_var[124]);
	_i_var[173] = (_i_var[1])*(_i_var[126]);
	_i_var[174] = (_i_var[128])+(_i_var[127]);
	_i_var[175] = (_i_var[0])*(_i_var[126]);
	_i_var[176] = (_i_var[130])+(_i_var[129]);
	_i_var[177] = (_i_var[3])*(_i_var[131]);
	_i_var[178] = (_i_var[133])+(_i_var[132]);
	_i_var[179] = (_i_var[135])+(_i_var[134]);
	_i_var[180] = (_i_var[120])*(_i_var[57]);
	_i_var[181] = (_i_var[137])+(_i_var[136]);
	_i_var[182] = (_i_var[1])*(_i_var[138]);
	_i_var[183] = (_i_var[140])+(_i_var[139]);
	_i_var[184] = (_i_var[0])*(_i_var[138]);
	_i_var[185] = (_i_var[142])+(_i_var[141]);
	_i_var[186] = (_i_var[3])*(_i_var[143]);
	_i_var[187] = (_i_var[145])+(_i_var[144]);
	_i_var[188] = (_i_var[2])*(_i_var[123]);
	_i_var[189] = (_i_var[147])+(_i_var[146]);
	_i_var[190] = (_i_var[94])*(_i_var[54]);
	_i_var[191] = (_i_var[149])+(_i_var[148]);
	_i_var[192] = (_i_var[150])*(_i_var[37]);
	_i_var[193] = (_i_var[152])+(_i_var[151]);
	_i_var[194] = (_i_var[1])*(_i_var[153]);
	_i_var[195] = (_i_var[154])+(_i_var[103]);
	_i_var[196] = (_i_var[1])*(_i_var[155]);
	_i_var[197] = (_i_var[157])+(_i_var[156]);
	_i_var[198] = (_i_var[158])*(_i_var[54]);
	_i_var[199] = (_i_var[160])+(_i_var[159]);
	_i_var[200] = (_i_var[0])*(_i_var[153]);
	_i_var[201] = (_i_var[162])+(_i_var[161]);
	_i_var[202] = (_i_var[0])*(_i_var[155]);
	_i_var[203] = (_i_var[164])+(_i_var[163]);
	_i_var[204] = (_i_var[158])*(_i_var[57]);
	_i_var[205] = (_i_var[166])+(_i_var[165]);
	_i_var[206] = (_i_var[2])*(_i_var[131]);
	_i_var[207] = (_i_var[4])*(_i_var[143]);
	_i_var[208] = (_i_var[118])*(_i_var[54]);
	_i_var[209] = (_i_var[168])+(_i_var[167]);
	_i_var[210] = (_i_var[170])+(_i_var[169]);
	_i_var[211] = (_i_var[172])+(_i_var[171]);
	_i_var[212] = (_i_var[174])+(_i_var[173]);
	_i_var[213] = (_i_var[176])+(_i_var[175]);
	_i_var[214] = (_i_var[178])+(_i_var[177]);
	_i_var[215] = (_i_var[179])+(_i_var[150]);
	_i_var[216] = 0;
	_i_var[217] = (_i_var[181])+(_i_var[180]);
	_i_var[218] = (_i_var[183])+(_i_var[182]);
	_i_var[219] = (_i_var[185])+(_i_var[184]);
	_i_var[220] = (_i_var[187])+(_i_var[186]);
	_i_var[221] = (_i_var[189])+(_i_var[188]);
	_i_var[222] = (_i_var[191])+(_i_var[190]);
	_i_var[223] = (_i_var[193])+(_i_var[192]);
	_i_var[224] = (_i_var[195])+(_i_var[194]);
	_i_var[225] = (_i_var[197])+(_i_var[196]);
	_i_var[226] = (_i_var[199])+(_i_var[198]);
	_i_var[227] = (_i_var[201])+(_i_var[200]);
	_i_var[228] = (_i_var[203])+(_i_var[202]);
	_i_var[229] = (_i_var[205])+(_i_var[204]);
	_i_var[230] = (_i_var[207])+(_i_var[206]);
	_i_var[231] = (_i_var[209])+(_i_var[208]);
	energyhessian(0,0) = _i_var[210];
	energyhessian(1,0) = _i_var[211];
	energyhessian(2,0) = _i_var[212];
	energyhessian(3,0) = _i_var[213];
	energyhessian(4,0) = _i_var[214];
	energyhessian(5,0) = _i_var[215];
	energyhessian(6,0) = _i_var[216];
	energyhessian(7,0) = _i_var[216];
	energyhessian(8,0) = _i_var[216];
	energyhessian(0,1) = _i_var[211];
	energyhessian(1,1) = _i_var[217];
	energyhessian(2,1) = _i_var[218];
	energyhessian(3,1) = _i_var[219];
	energyhessian(4,1) = _i_var[220];
	energyhessian(5,1) = _i_var[221];
	energyhessian(6,1) = _i_var[216];
	energyhessian(7,1) = _i_var[216];
	energyhessian(8,1) = _i_var[216];
	energyhessian(0,2) = _i_var[212];
	energyhessian(1,2) = _i_var[218];
	energyhessian(2,2) = _i_var[222];
	energyhessian(3,2) = _i_var[223];
	energyhessian(4,2) = _i_var[224];
	energyhessian(5,2) = _i_var[225];
	energyhessian(6,2) = _i_var[216];
	energyhessian(7,2) = _i_var[216];
	energyhessian(8,2) = _i_var[216];
	energyhessian(0,3) = _i_var[213];
	energyhessian(1,3) = _i_var[219];
	energyhessian(2,3) = _i_var[223];
	energyhessian(3,3) = _i_var[226];
	energyhessian(4,3) = _i_var[227];
	energyhessian(5,3) = _i_var[228];
	energyhessian(6,3) = _i_var[216];
	energyhessian(7,3) = _i_var[216];
	energyhessian(8,3) = _i_var[216];
	energyhessian(0,4) = _i_var[214];
	energyhessian(1,4) = _i_var[220];
	energyhessian(2,4) = _i_var[224];
	energyhessian(3,4) = _i_var[227];
	energyhessian(4,4) = _i_var[229];
	energyhessian(5,4) = _i_var[230];
	energyhessian(6,4) = _i_var[216];
	energyhessian(7,4) = _i_var[216];
	energyhessian(8,4) = _i_var[216];
	energyhessian(0,5) = _i_var[215];
	energyhessian(1,5) = _i_var[221];
	energyhessian(2,5) = _i_var[225];
	energyhessian(3,5) = _i_var[228];
	energyhessian(4,5) = _i_var[230];
	energyhessian(5,5) = _i_var[231];
	energyhessian(6,5) = _i_var[216];
	energyhessian(7,5) = _i_var[216];
	energyhessian(8,5) = _i_var[216];
	energyhessian(0,6) = _i_var[216];
	energyhessian(1,6) = _i_var[216];
	energyhessian(2,6) = _i_var[216];
	energyhessian(3,6) = _i_var[216];
	energyhessian(4,6) = _i_var[216];
	energyhessian(5,6) = _i_var[216];
	energyhessian(6,6) = _i_var[216];
	energyhessian(7,6) = _i_var[216];
	energyhessian(8,6) = _i_var[216];
	energyhessian(0,7) = _i_var[216];
	energyhessian(1,7) = _i_var[216];
	energyhessian(2,7) = _i_var[216];
	energyhessian(3,7) = _i_var[216];
	energyhessian(4,7) = _i_var[216];
	energyhessian(5,7) = _i_var[216];
	energyhessian(6,7) = _i_var[216];
	energyhessian(7,7) = _i_var[216];
	energyhessian(8,7) = _i_var[216];
	energyhessian(0,8) = _i_var[216];
	energyhessian(1,8) = _i_var[216];
	energyhessian(2,8) = _i_var[216];
	energyhessian(3,8) = _i_var[216];
	energyhessian(4,8) = _i_var[216];
	energyhessian(5,8) = _i_var[216];
	energyhessian(6,8) = _i_var[216];
	energyhessian(7,8) = _i_var[216];
	energyhessian(8,8) = _i_var[216];
}

#endif
