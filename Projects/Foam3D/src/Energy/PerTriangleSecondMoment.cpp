#include "../../include/Energy/PerTriangleSecondMoment.h"

#define NINPUTS 12

// @formatter:off
void PerTriangleSecondMoment::getValue(TriangleValue &value, const TV3 &centroid) const {
    double x0 = value.v0(0);
    double y0 = value.v0(1);
    double z0 = value.v0(2);
    double x1 = value.v1(0);
    double y1 = value.v1(1);
    double z1 = value.v1(2);
    double x2 = value.v2(0);
    double y2 = value.v2(1);
    double z2 = value.v2(2);
    double xc = centroid(0);
    double yc = centroid(1);
    double zc = centroid(2);

    double t1 = z0 * z0;
    double t3 = 0.5e1 * zc;
    double t6 = z1 * z1;
    double t7 = z2 - t3;
    double t9 = z2 * z2;
    double t11 = 0.5e1 * zc * z2;
    double t12 = x0 * x0;
    double t14 = 0.5e1 * xc;
    double t18 = x1 * x1;
    double t20 = x1 * (x2 - t14);
    double t21 = x2 * x2;
    double t22 = x2 * xc;
    double t23 = 0.5e1 * t22;
    double t24 = y0 * y0;
    double t26 = 0.5e1 * yc;
    double t30 = y1 * y1;
    double t32 = y1 * (y2 - t26);
    double t33 = zc * zc;
    double t34 = 0.10e2 * t33;
    double t35 = xc * xc;
    double t36 = 0.10e2 * t35;
    double t37 = y2 * y2;
    double t38 = y2 * yc;
    double t39 = 0.5e1 * t38;
    double t40 = yc * yc;
    double t41 = 0.10e2 * t40;
    double t42 = t6 + z1 * t7 + t9 - t11 + 0.3e1 * t12 + 0.2e1 * x0 * (x1 + x2 - t14) + t18 + t20 + t21 - t23 + 0.3e1 * t24 + 0.2e1 * y0 * (y1 + y2 - t26) + t30 + t32 + t34 + t36 + t37 - t39 + t41;
    double t56 = t9 - t11 + t12 + x0 * (0.2e1 * x1 + x2 - t14) + 0.3e1 * t18 + 0.2e1 * t20 + t21 - t23 + t24 + y0 * (0.2e1 * y1 + y2 - t26) + 0.3e1 * t30 + 0.2e1 * t32 + t34 + t36 + t37 - t39 + t41;
    double t58 = 0.2e1 * x2;
    double t65 = 0.2e1 * y2;
    double t72 = t9 - t11 + t12 + x0 * (x1 + t58 - t14) + t18 + x1 * (t58 - t14) + 0.3e1 * t21 - 0.10e2 * t22 + t24 + y0 * (y1 + t65 - t26) + t30 + y1 * (t65 - t26) + t34 + t36 + 0.3e1 * t37 - 0.10e2 * t38 + t41;
    value.value = ((y1 - y2) * x0 + (-y0 + y2) * x1 + (y0 - y1) * x2) * (z0 * t1 + t1 * (z1 + z2 - t3) + z0 * t42 + z1 * t6 + t6 * t7 + z1 * t56 + t72 * z2) / 0.60e2;
}

void PerTriangleSecondMoment::getGradient(TriangleValue &value, const TV3 &centroid) const {
    double x0 = value.v0(0);
    double y0 = value.v0(1);
    double z0 = value.v0(2);
    double x1 = value.v1(0);
    double y1 = value.v1(1);
    double z1 = value.v1(2);
    double x2 = value.v2(0);
    double y2 = value.v2(1);
    double z2 = value.v2(2);
    double xc = centroid(0);
    double yc = centroid(1);
    double zc = centroid(2);

    double unknown[NINPUTS];

    double t2 = 0.2e1 * x1;
    double t3 = 0.2e1 * x2;
    double t4 = 0.10e2 * xc;
    double t7 = 0.2e1 * x0;
    double t8 = 0.5e1 * xc;
    double t9 = t7 + t2 + x2 - t8;
    double t11 = t7 + x1 + t3 - t8;
    double t14 = y1 - y2;
    double t16 = -y0 + y2;
    double t18 = y0 - y1;
    double t20 = x0 * t14 + x1 * t16 + x2 * t18;
    double t22 = z0 * z0;
    double t24 = 0.5e1 * zc;
    double t25 = z1 + z2 - t24;
    double t27 = z1 * z1;
    double t28 = z2 - t24;
    double t29 = z1 * t28;
    double t30 = z2 * z2;
    double t32 = 0.5e1 * zc * z2;
    double t33 = x0 * x0;
    double t34 = 0.3e1 * t33;
    double t37 = 0.2e1 * x0 * (x1 + x2 - t8);
    double t38 = x1 * x1;
    double t40 = x1 * (x2 - t8);
    double t41 = x2 * x2;
    double t42 = x2 * xc;
    double t43 = 0.5e1 * t42;
    double t44 = y0 * y0;
    double t45 = 0.3e1 * t44;
    double t46 = 0.5e1 * yc;
    double t49 = 0.2e1 * y0 * (y1 + y2 - t46);
    double t50 = y1 * y1;
    double t52 = y1 * (y2 - t46);
    double t53 = zc * zc;
    double t54 = 0.10e2 * t53;
    double t55 = xc * xc;
    double t56 = 0.10e2 * t55;
    double t57 = y2 * y2;
    double t58 = y2 * yc;
    double t59 = 0.5e1 * t58;
    double t60 = yc * yc;
    double t61 = 0.10e2 * t60;
    double t62 = t27 + t29 + t30 - t32 + t34 + t37 + t38 + t40 + t41 - t43 + t45 + t49 + t50 + t52 + t54 + t56 + t57 - t59 + t61;
    double t67 = x0 * (t2 + x2 - t8);
    double t68 = 0.3e1 * t38;
    double t69 = 0.2e1 * t40;
    double t70 = 0.2e1 * y1;
    double t72 = y0 * (t70 + y2 - t46);
    double t73 = 0.3e1 * t50;
    double t74 = 0.2e1 * t52;
    double t75 = t30 - t32 + t33 + t67 + t68 + t69 + t41 - t43 + t44 + t72 + t73 + t74 + t54 + t56 + t57 - t59 + t61;
    double t78 = x0 * (x1 + t3 - t8);
    double t80 = x1 * (t3 - t8);
    double t81 = 0.3e1 * t41;
    double t82 = 0.10e2 * t42;
    double t83 = 0.2e1 * y2;
    double t85 = y0 * (y1 + t83 - t46);
    double t87 = y1 * (t83 - t46);
    double t88 = 0.3e1 * t57;
    double t89 = 0.10e2 * t58;
    double t90 = t30 - t32 + t33 + t78 + t38 + t80 + t81 - t82 + t44 + t85 + t50 + t87 + t54 + t56 + t88 - t89 + t61;
    double t92 = t22 * t25 + z0 * t22 + t27 * t28 + z1 * t27 + z0 * t62 + z1 * t75 + t90 * z2;
    double t96 = 0.10e2 * yc;
    double t99 = 0.2e1 * y0;
    double t100 = t99 + t70 + y2 - t46;
    double t102 = t99 + y1 + t83 - t46;
    double t113 = t41 - t43 + t45 + t49 + t50 + t52 + t54 + t56 + t57 - t59 + t61;
    double t121 = x0 + t2 + t3 - t8;
    double t131 = y0 + t70 + t83 - t46;
    double t144 = t41 - t43 + t44 + t72 + t73 + t74 + t54 + t56 + t57 - t59 + t61;
    double t167 = 0.2e1 * z2;
    double t170 = t167 - t24;
    double t172 = t22 + z0 * (z1 + t167 - t24) + t27 + z1 * t170 + t30 - t32 + t33 + t78 + t38 + t80 + t81;
    double t174 = t170 * z2 + t44 + t50 + t54 + t56 + t61 - t82 + t85 + t87 + t88 - t89;
    double t179 = 0.5e1 * x1;
    double t180 = 0.5e1 * x2;
    double t181 = 0.20e2 * xc;
    double t184 = 0.5e1 * x0;
    double t195 = 0.5e1 * y1;
    double t196 = 0.5e1 * y2;
    double t197 = 0.20e2 * yc;
    double t200 = 0.5e1 * y0;
    double t212 = 0.5e1 * z2;
    double t213 = 0.20e2 * zc;
    double t217 = -t212 + t213;
    unknown[0] = t20 * (z0 * (0.6e1 * x0 + t2 + t3 - t4) + z1 * t9 + t11 * z2) / 0.60e2 + t14 * t92 / 0.60e2;
    unknown[1] = t20 * (z0 * (0.6e1 * y0 + t70 + t83 - t96) + z1 * t100 + t102 * z2) / 0.60e2 + (-x1 + x2) * t92 / 0.60e2;
    unknown[2] = t20 * (0.2e1 * z0 * t25 + t113 + 0.3e1 * t22 + t27 + t29 + t30 - t32 + t34 + t37 + t38 + t40) / 0.60e2;
    unknown[3] = t20 * (z0 * t9 + z1 * (t7 + 0.6e1 * x1 + t3 - t4) + t121 * z2) / 0.60e2 + t16 * t92 / 0.60e2;
    unknown[4] = t20 * (z0 * t100 + z1 * (t99 + 0.6e1 * y1 + t83 - t96) + t131 * z2) / 0.60e2 + (x0 - x2) * t92 / 0.60e2;
    unknown[5] = t20 * (t22 + z0 * (0.2e1 * z1 + z2 - t24) + 0.3e1 * t27 + 0.2e1 * t29 + t30 - t32 + t33 + t67 + t68 + t69 + t144) / 0.60e2;
    unknown[6] = t20 * (z0 * t11 + z1 * t121 + (t7 + t2 + 0.6e1 * x2 - t4) * z2) / 0.60e2 + t18 * t92 / 0.60e2;
    unknown[7] = t20 * (z0 * t102 + z1 * t131 + (t99 + t70 + 0.6e1 * y2 - t96) * z2) / 0.60e2 + (-x0 + x1) * t92 / 0.60e2;
    unknown[8] = t20 * (t172 + t174) / 0.60e2;
    unknown[9] = t20 * (z0 * (-0.10e2 * x0 - t179 - t180 + t181) + z1 * (-t184 - 0.10e2 * x1 - t180 + t181) + (-t184 - t179 - 0.10e2 * x2 + t181) * z2) / 0.60e2;
    unknown[10] = t20 * (z0 * (-0.10e2 * y0 - t195 - t196 + t197) + z1 * (-t200 - 0.10e2 * y1 - t196 + t197) + (-t200 - t195 - 0.10e2 * y2 + t197) * z2) / 0.60e2;
    unknown[11] = t20 * (-0.5e1 * t22 + z0 * (-0.5e1 * z1 - t212 + t213) - 0.5e1 * t27 + z1 * t217 + t217 * z2) / 0.60e2;

    value.gradient = Eigen::Map<Eigen::VectorXd>(&unknown[0], NINPUTS);
}

void PerTriangleSecondMoment::getHessian(TriangleValue &value, const TV3 &centroid) const {
    double x0 = value.v0(0);
    double y0 = value.v0(1);
    double z0 = value.v0(2);
    double x1 = value.v1(0);
    double y1 = value.v1(1);
    double z1 = value.v1(2);
    double x2 = value.v2(0);
    double y2 = value.v2(1);
    double z2 = value.v2(2);
    double xc = centroid(0);
    double yc = centroid(1);
    double zc = centroid(2);

    double unknown[NINPUTS][NINPUTS];

    double t1 = 0.6e1 * z0;
    double t2 = 0.2e1 * z1;
    double t3 = 0.2e1 * z2;
    double t5 = y1 - y2;
    double t7 = -y0 + y2;
    double t9 = y0 - y1;
    double t11 = x0 * t5 + x1 * t7 + x2 * t9;
    double t13 = t11 * (t1 + t2 + t3) / 0.60e2;
    double t15 = 0.2e1 * x1;
    double t16 = 0.2e1 * x2;
    double t17 = 0.10e2 * xc;
    double t18 = 0.6e1 * x0 + t15 + t16 - t17;
    double t20 = 0.2e1 * x0;
    double t21 = 0.5e1 * xc;
    double t22 = t20 + t15 + x2 - t21;
    double t24 = t20 + x1 + t16 - t21;
    double t26 = z0 * t18 + z1 * t22 + t24 * z2;
    double t30 = -x1 + x2;
    double t33 = 0.2e1 * y1;
    double t34 = 0.2e1 * y2;
    double t35 = 0.10e2 * yc;
    double t36 = 0.6e1 * y0 + t33 + t34 - t35;
    double t38 = 0.2e1 * y0;
    double t39 = 0.5e1 * yc;
    double t40 = t38 + t33 + y2 - t39;
    double t42 = t38 + y1 + t34 - t39;
    double t44 = z0 * t36 + z1 * t40 + t42 * z2;
    double t46 = t30 * t26 + t5 * t44;
    double t48 = z0 * z0;
    double t50 = 0.5e1 * zc;
    double t51 = z1 + z2 - t50;
    double t54 = z1 * z1;
    double t55 = z2 - t50;
    double t56 = z1 * t55;
    double t57 = z2 * z2;
    double t59 = 0.5e1 * zc * z2;
    double t60 = x0 * x0;
    double t61 = 0.3e1 * t60;
    double t64 = 0.2e1 * x0 * (x1 + x2 - t21);
    double t65 = x1 * x1;
    double t67 = x1 * (x2 - t21);
    double t69 = x2 * x2;
    double t70 = x2 * xc;
    double t71 = 0.5e1 * t70;
    double t72 = y0 * y0;
    double t73 = 0.3e1 * t72;
    double t76 = 0.2e1 * y0 * (y1 + y2 - t39);
    double t77 = y1 * y1;
    double t79 = y1 * (y2 - t39);
    double t80 = zc * zc;
    double t81 = 0.10e2 * t80;
    double t82 = xc * xc;
    double t83 = 0.10e2 * t82;
    double t84 = y2 * y2;
    double t85 = y2 * yc;
    double t86 = 0.5e1 * t85;
    double t87 = yc * yc;
    double t88 = 0.10e2 * t87;
    double t89 = t69 - t71 + t73 + t76 + t77 + t79 + t81 + t83 + t84 - t86 + t88;
    double t90 = 0.2e1 * z0 * t51 + 0.3e1 * t48 + t54 + t56 + t57 - t59 + t61 + t64 + t65 + t67 + t89;
    double t92 = t11 * t18 + t5 * t90;
    double t93 = 0.2e1 * z0;
    double t95 = t11 * (t93 + t2 + z2);
    double t99 = t20 + 0.6e1 * x1 + t16 - t17;
    double t101 = x0 + t15 + t16 - t21;
    double t103 = t101 * z2 + z0 * t22 + z1 * t99;
    double t105 = t5 * t103 + t7 * t26 + t95;
    double t106 = x0 - x2;
    double t110 = t38 + 0.6e1 * y1 + t34 - t35;
    double t112 = y0 + t33 + t34 - t39;
    double t114 = z1 * t110 + t112 * z2 + z0 * t40;
    double t116 = z0 * t48;
    double t117 = t48 * t51;
    double t118 = t54 + t56 + t57 - t59 + t61 + t64 + t65 + t67 + t69 - t71 + t73 + t76 + t77 + t79 + t81 + t83 + t84 - t86 + t88;
    double t119 = z0 * t118;
    double t120 = z1 * t54;
    double t121 = t54 * t55;
    double t123 = x0 * (t15 + x2 - t21);
    double t124 = 0.3e1 * t65;
    double t125 = 0.2e1 * t67;
    double t127 = y0 * (t33 + y2 - t39);
    double t128 = 0.3e1 * t77;
    double t129 = 0.2e1 * t79;
    double t130 = t57 - t59 + t60 + t123 + t124 + t125 + t69 - t71 + t72 + t127 + t128 + t129 + t81 + t83 + t84 - t86 + t88;
    double t131 = z1 * t130;
    double t133 = x0 * (x1 + t16 - t21);
    double t135 = x1 * (t16 - t21);
    double t136 = 0.3e1 * t69;
    double t137 = 0.10e2 * t70;
    double t139 = y0 * (y1 + t34 - t39);
    double t141 = y1 * (t34 - t39);
    double t142 = 0.3e1 * t84;
    double t143 = 0.10e2 * t85;
    double t144 = t57 - t59 + t60 + t133 + t65 + t135 + t136 - t137 + t72 + t139 + t77 + t141 + t81 + t83 + t142 - t143 + t88;
    double t145 = t144 * z2;
    double t146 = t106 * t26 + t5 * t114 + t116 + t117 + t119 + t120 + t121 + t131 + t145;
    double t147 = t11 * t22;
    double t153 = t69 - t71 + t72 + t127 + t128 + t129 + t81 + t83 + t84 - t86 + t88;
    double t154 = t48 + z0 * (t2 + z2 - t50) + 0.3e1 * t54 + 0.2e1 * t56 + t57 - t59 + t60 + t123 + t124 + t125 + t153;
    double t156 = t5 * t154 + t147;
    double t158 = t11 * (t93 + z1 + t3);
    double t163 = t20 + t15 + 0.6e1 * x2 - t17;
    double t165 = z1 * t101 + t163 * z2 + z0 * t24;
    double t167 = t5 * t165 + t9 * t26 + t158;
    double t168 = -x0 + x1;
    double t173 = t38 + t33 + 0.6e1 * y2 - t35;
    double t175 = z1 * t112 + t173 * z2 + z0 * t42;
    double t177 = t168 * t26 + t5 * t175 - t116 - t117 - t119 - t120 - t121 - t131 - t145;
    double t178 = t11 * t24;
    double t181 = t3 - t50;
    double t183 = t48 + z0 * (z1 + t3 - t50) + t54 + z1 * t181 + t57 - t59 + t60 + t133 + t65 + t135 + t136;
    double t185 = t181 * z2 - t137 + t139 + t141 + t142 - t143 + t72 + t77 + t81 + t83 + t88;
    double t186 = t183 + t185;
    double t188 = t5 * t186 + t178;
    double t189 = 0.10e2 * z0;
    double t190 = 0.5e1 * z1;
    double t191 = 0.5e1 * z2;
    double t193 = t11 * (-t189 - t190 - t191);
    double t195 = 0.5e1 * x1;
    double t196 = 0.5e1 * x2;
    double t197 = 0.20e2 * xc;
    double t198 = -0.10e2 * x0 - t195 - t196 + t197;
    double t200 = 0.5e1 * x0;
    double t202 = -t200 - 0.10e2 * x1 - t196 + t197;
    double t205 = -t200 - t195 - 0.10e2 * x2 + t197;
    double t207 = z0 * t198 + z1 * t202 + t205 * z2;
    double t209 = t5 * t207 + t193;
    double t211 = 0.5e1 * y1;
    double t212 = 0.5e1 * y2;
    double t213 = 0.20e2 * yc;
    double t214 = -0.10e2 * y0 - t211 - t212 + t213;
    double t216 = 0.5e1 * y0;
    double t218 = -t216 - 0.10e2 * y1 - t212 + t213;
    double t221 = -t216 - t211 - 0.10e2 * y2 + t213;
    double t223 = z0 * t214 + z1 * t218 + t221 * z2;
    double t225 = t5 * t223 / 0.60e2;
    double t227 = 0.20e2 * zc;
    double t231 = -t191 + t227;
    double t234 = -0.5e1 * t48 + z0 * (-t190 - t191 + t227) - 0.5e1 * t54 + z1 * t231 + t231 * z2;
    double t236 = t5 * t234 / 0.60e2;
    double t242 = t11 * t36 + t30 * t90;
    double t245 = t30 * t103 + t7 * t44 - t116 - t117 - t119 - t120 - t121 - t131 - t145;
    double t248 = t106 * t44 + t30 * t114 + t95;
    double t249 = t11 * t40;
    double t251 = t30 * t154 + t249;
    double t254 = t30 * t165 + t9 * t44 + t116 + t117 + t119 + t120 + t121 + t131 + t145;
    double t257 = t168 * t44 + t30 * t175 + t158;
    double t258 = t11 * t42;
    double t260 = t30 * t186 + t258;
    double t262 = t30 * t207 / 0.60e2;
    double t264 = t30 * t223 + t193;
    double t266 = t30 * t234 / 0.60e2;
    double t267 = 0.10e2 * zc;
    double t272 = t7 * t90 + t147;
    double t274 = t106 * t90 + t249;
    double t277 = t11 * (t93 + t2 + z2 - t50) / 0.60e2;
    double t279 = t9 * t90 + t178;
    double t281 = t168 * t90 + t258;
    double t284 = t11 * (t93 + z1 + t3 - t50) / 0.60e2;
    double t286 = t11 * t198 / 0.60e2;
    double t288 = t11 * t214 / 0.60e2;
    double t291 = t11 * (-t189 - t190 - t191 + t227) / 0.60e2;
    double t292 = 0.6e1 * z1;
    double t295 = t11 * (t93 + t292 + t3) / 0.60e2;
    double t301 = t106 * t103 + t7 * t114;
    double t304 = t11 * t99 + t7 * t154;
    double t306 = t11 * (z0 + t2 + t3);
    double t309 = t9 * t103 + t7 * t165 + t306;
    double t312 = t168 * t103 + t7 * t175 + t116 + t117 + t119 + t120 + t121 + t131 + t145;
    double t313 = t11 * t101;
    double t315 = t7 * t186 + t313;
    double t316 = 0.5e1 * z0;
    double t317 = 0.10e2 * z1;
    double t319 = t11 * (-t316 - t317 - t191);
    double t321 = t7 * t207 + t319;
    double t323 = t7 * t223 / 0.60e2;
    double t325 = t7 * t234 / 0.60e2;
    double t331 = t106 * t154 + t11 * t110;
    double t334 = t106 * t165 + t9 * t114 - t116 - t117 - t119 - t120 - t121 - t131 - t145;
    double t337 = t106 * t175 + t168 * t114 + t306;
    double t338 = t11 * t112;
    double t340 = t106 * t186 + t338;
    double t342 = t106 * t207 / 0.60e2;
    double t344 = t106 * t223 + t319;
    double t346 = t106 * t234 / 0.60e2;
    double t351 = t9 * t154 + t313;
    double t353 = t168 * t154 + t338;
    double t356 = t11 * (z0 + t2 + t3 - t50) / 0.60e2;
    double t358 = t11 * t202 / 0.60e2;
    double t360 = t11 * t218 / 0.60e2;
    double t363 = t11 * (-t316 - t317 - t191 + t227) / 0.60e2;
    double t364 = 0.6e1 * z2;
    double t367 = t11 * (t93 + t2 + t364) / 0.60e2;
    double t373 = t168 * t165 + t9 * t175;
    double t376 = t11 * t163 + t9 * t186;
    double t377 = 0.10e2 * z2;
    double t379 = t11 * (-t316 - t190 - t377);
    double t381 = t9 * t207 + t379;
    double t383 = t9 * t223 / 0.60e2;
    double t385 = t9 * t234 / 0.60e2;
    double t391 = t11 * t173 + t168 * t186;
    double t393 = t168 * t207 / 0.60e2;
    double t395 = t168 * t223 + t379;
    double t397 = t168 * t234 / 0.60e2;
    double t402 = t11 * t205 / 0.60e2;
    double t404 = t11 * t221 / 0.60e2;
    double t407 = t11 * (-t316 - t190 - t377 + t227) / 0.60e2;
    double t410 = t11 * (z0 + z2 + z1) / 0.3e1;
    unknown[0][0] = t13 + t5 * t26 / 0.30e2;
    unknown[0][1] = t46 / 0.60e2;
    unknown[0][2] = t92 / 0.60e2;
    unknown[0][3] = t105 / 0.60e2;
    unknown[0][4] = t146 / 0.60e2;
    unknown[0][5] = t156 / 0.60e2;
    unknown[0][6] = t167 / 0.60e2;
    unknown[0][7] = t177 / 0.60e2;
    unknown[0][8] = t188 / 0.60e2;
    unknown[0][9] = t209 / 0.60e2;
    unknown[0][10] = t225;
    unknown[0][11] = t236;
    unknown[1][0] = t46 / 0.60e2;
    unknown[1][1] = t13 + t30 * t44 / 0.30e2;
    unknown[1][2] = t242 / 0.60e2;
    unknown[1][3] = t245 / 0.60e2;
    unknown[1][4] = t248 / 0.60e2;
    unknown[1][5] = t251 / 0.60e2;
    unknown[1][6] = t254 / 0.60e2;
    unknown[1][7] = t257 / 0.60e2;
    unknown[1][8] = t260 / 0.60e2;
    unknown[1][9] = t262;
    unknown[1][10] = t264 / 0.60e2;
    unknown[1][11] = t266;
    unknown[2][0] = t92 / 0.60e2;
    unknown[2][1] = t242 / 0.60e2;
    unknown[2][2] = t11 * (t1 + t2 + t3 - t267) / 0.60e2;
    unknown[2][3] = t272 / 0.60e2;
    unknown[2][4] = t274 / 0.60e2;
    unknown[2][5] = t277;
    unknown[2][6] = t279 / 0.60e2;
    unknown[2][7] = t281 / 0.60e2;
    unknown[2][8] = t284;
    unknown[2][9] = t286;
    unknown[2][10] = t288;
    unknown[2][11] = t291;
    unknown[3][0] = t105 / 0.60e2;
    unknown[3][1] = t245 / 0.60e2;
    unknown[3][2] = t272 / 0.60e2;
    unknown[3][3] = t295 + t7 * t103 / 0.30e2;
    unknown[3][4] = t301 / 0.60e2;
    unknown[3][5] = t304 / 0.60e2;
    unknown[3][6] = t309 / 0.60e2;
    unknown[3][7] = t312 / 0.60e2;
    unknown[3][8] = t315 / 0.60e2;
    unknown[3][9] = t321 / 0.60e2;
    unknown[3][10] = t323;
    unknown[3][11] = t325;
    unknown[4][0] = t146 / 0.60e2;
    unknown[4][1] = t248 / 0.60e2;
    unknown[4][2] = t274 / 0.60e2;
    unknown[4][3] = t301 / 0.60e2;
    unknown[4][4] = t295 + t106 * t114 / 0.30e2;
    unknown[4][5] = t331 / 0.60e2;
    unknown[4][6] = t334 / 0.60e2;
    unknown[4][7] = t337 / 0.60e2;
    unknown[4][8] = t340 / 0.60e2;
    unknown[4][9] = t342;
    unknown[4][10] = t344 / 0.60e2;
    unknown[4][11] = t346;
    unknown[5][0] = t156 / 0.60e2;
    unknown[5][1] = t251 / 0.60e2;
    unknown[5][2] = t277;
    unknown[5][3] = t304 / 0.60e2;
    unknown[5][4] = t331 / 0.60e2;
    unknown[5][5] = t11 * (t93 + t292 + t3 - t267) / 0.60e2;
    unknown[5][6] = t351 / 0.60e2;
    unknown[5][7] = t353 / 0.60e2;
    unknown[5][8] = t356;
    unknown[5][9] = t358;
    unknown[5][10] = t360;
    unknown[5][11] = t363;
    unknown[6][0] = t167 / 0.60e2;
    unknown[6][1] = t254 / 0.60e2;
    unknown[6][2] = t279 / 0.60e2;
    unknown[6][3] = t309 / 0.60e2;
    unknown[6][4] = t334 / 0.60e2;
    unknown[6][5] = t351 / 0.60e2;
    unknown[6][6] = t367 + t9 * t165 / 0.30e2;
    unknown[6][7] = t373 / 0.60e2;
    unknown[6][8] = t376 / 0.60e2;
    unknown[6][9] = t381 / 0.60e2;
    unknown[6][10] = t383;
    unknown[6][11] = t385;
    unknown[7][0] = t177 / 0.60e2;
    unknown[7][1] = t257 / 0.60e2;
    unknown[7][2] = t281 / 0.60e2;
    unknown[7][3] = t312 / 0.60e2;
    unknown[7][4] = t337 / 0.60e2;
    unknown[7][5] = t353 / 0.60e2;
    unknown[7][6] = t373 / 0.60e2;
    unknown[7][7] = t367 + t168 * t175 / 0.30e2;
    unknown[7][8] = t391 / 0.60e2;
    unknown[7][9] = t393;
    unknown[7][10] = t395 / 0.60e2;
    unknown[7][11] = t397;
    unknown[8][0] = t188 / 0.60e2;
    unknown[8][1] = t260 / 0.60e2;
    unknown[8][2] = t284;
    unknown[8][3] = t315 / 0.60e2;
    unknown[8][4] = t340 / 0.60e2;
    unknown[8][5] = t356;
    unknown[8][6] = t376 / 0.60e2;
    unknown[8][7] = t391 / 0.60e2;
    unknown[8][8] = t11 * (t93 + t2 + t364 - t267) / 0.60e2;
    unknown[8][9] = t402;
    unknown[8][10] = t404;
    unknown[8][11] = t407;
    unknown[9][0] = t209 / 0.60e2;
    unknown[9][1] = t262;
    unknown[9][2] = t286;
    unknown[9][3] = t321 / 0.60e2;
    unknown[9][4] = t342;
    unknown[9][5] = t358;
    unknown[9][6] = t381 / 0.60e2;
    unknown[9][7] = t393;
    unknown[9][8] = t402;
    unknown[9][9] = t410;
    unknown[9][10] = 0.0e0;
    unknown[9][11] = 0.0e0;
    unknown[10][0] = t225;
    unknown[10][1] = t264 / 0.60e2;
    unknown[10][2] = t288;
    unknown[10][3] = t323;
    unknown[10][4] = t344 / 0.60e2;
    unknown[10][5] = t360;
    unknown[10][6] = t383;
    unknown[10][7] = t395 / 0.60e2;
    unknown[10][8] = t404;
    unknown[10][9] = 0.0e0;
    unknown[10][10] = t410;
    unknown[10][11] = 0.0e0;
    unknown[11][0] = t236;
    unknown[11][1] = t266;
    unknown[11][2] = t291;
    unknown[11][3] = t325;
    unknown[11][4] = t346;
    unknown[11][5] = t363;
    unknown[11][6] = t385;
    unknown[11][7] = t397;
    unknown[11][8] = t407;
    unknown[11][9] = 0.0e0;
    unknown[11][10] = 0.0e0;
    unknown[11][11] = t410;

    value.hessian = Eigen::Map<Eigen::MatrixXd>(&unknown[0][0], NINPUTS, NINPUTS);
}
